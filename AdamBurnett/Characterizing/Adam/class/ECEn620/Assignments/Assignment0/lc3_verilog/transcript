# //  Questa Sim-64
# //  Version 10.1c linux_x86_64 Jul 27 2012
# //
# //  Copyright 1991-2012 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //
# Modified modelsim.ini
# Modified modelsim.ini
# Modified modelsim.ini
cd /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog
# reading modelsim.ini
# Loading project LC3_Verilog
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful with warnings.
# 3 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
help
# Type help <command> to get information on that command, or try one of the following:
#   commands  List all available commands and topics.
#   Debugging Lists debugging commands.
#   Execution Information on controlling execution of the simulation.
#   Tcl       Information on Tcl commands.
#   Tk        Information on Tk commands.
#   incrTcl   Information on incrTcl commands.
# 
help commands
# Help avaliable on the following topics and commands:
# 	abort	add	add_cmdhelp	add_menu
# 	add_menucb	add_menuitem	add_menurb	add_separator
# 	add_submenu	addTime	after	alias
# 	append	apply_button_adder	array	batch_mode
# 	bd	bedit	bell	bgerror	binary
# 	bind	bindtags	body	bp	break
# 	button	call	canvas	catch	cd
# 	cdbg	change	change_menu_cmd	check
# 	checkbutton	checkpoint	class	clipboard
# 	clock	close	code	concat	config
# 	configure	cont	context	continue	dde
# 	Debugging	debugging	delete	describe	destroy
# 	disable_menu	disable_menuitem	disablebp
# 	divTime	do	down	drivers	dumplog64
# 	echo	edit	elite_edition	enable_menu
# 	enable_menuitem	enablebp	encoding	ensemble
# 	entry	env	environment	environment_nosource
# 	eof	eqTime	error	eval	event
# 	exa	examine	exec	execution	exit
# 	expr	fblocked	fconfigure	fcopy	file
# 	fileevent	find	findExec	flush	focus
# 	font	for	force	foreach	format
# 	formatTime	frame	get_menu_path	getactivecursortime
# 	getactivemarkertime	gets	ginfo	glob
# 	global	grab	grid	gteTime	gtTime
# 	help	history	http	if	image
# 	incr	incrTcl	info	int64ToReal
# 	int64ToStr	interp	intToTime	jobspy	join
# 	label	lappend	layout	lecho	left
# 	lindex	linsert	list	listbox	llength
# 	load	local	log	lower	lrange
# 	lremove	lreplace	lsearch	lset	lshift
# 	lsort	lsublist	lteTime	ltTime	luniq
# 	max	menu	menubutton	message	msgcat
# 	mulTime	namespace	namespaceOf	neqTime
# 	next	noforce	nolog	notepad	notrace
# 	noview	nowhen	onbreak	onElabError
# 	onerror	onfinish	open	openlog	option
# 	pack	package	panedwindow	parray
# 	pathOf	pause	pedit	personal_edition
# 	pid	place	pop	precision	PrefSource
# 	PrefSource(geometry)	PrefSource(HDLFileTypes)	PrefSource(HighlightErrorColor)
# 	PrefSource(highlightExecutableLines)	PrefSource(tabs)	PrefSource(user_hook)
# 	PrefSource(verilogFileTypes)	PrefSource(vhdlFileTypes)	PrefSource(WarnSourceChanged)
# 	printenv	proc	project	property	push
# 	puterr	puts	pwd	qhdel	qhdir
# 	qhlib	questasim	quietly	quit	qverilog
# 	qvhcom	qvlcom	radiobutton	radix
# 	raise	read	readers	RealToTime	regexp
# 	registry	regsub	rename	renamelog	report
# 	restart	restore	resume	return	right
# 	rincr	run	runStatus	sbrk	scale
# 	scaleTime	scan	sccom	scgenmod	scope
# 	scrollbar	sdfcom	search	searchlog	see
# 	seek	seetime	selection	send	set
# 	setenv	shift	Show	show	simNamespaceIsOpen
# 	simstats	simtime	slave_mode	socket	source
# 	spinbox	split	status	step	stop
# 	string	subst	subTime	suppress	switch
# 	tabset	tb	tcheck_set	tcheck_status
# 	Tcl	tcl_endOfWord	tcl_findLibrary
# 	tcl_startOfNextWord	tcl_startOfPreviousWord	tcl_wordBreakAfter
# 	tcl_wordBreakBefore	tell	text	time
# 	tix	Tk	tk	tk_chooseColor
# 	tk_chooseDirectory	tk_dialog	tk_getOpenFile
# 	tk_getSaveFile	tk_menuSetFocus	tk_messageBox
# 	tk_popup	tk_textCopy	tk_textCut	tk_textPaste
# 	tkwait	toggle	toplevel	trace	transcribe
# 	transcript	truncate	tssi2mti	typespec	ui_VVMode
# 	unknown	unset	unsetenv	up	update
# 	uplevel	upvar	usual	validTime	variable
# 	vcd	vcd2wlf	vcom	vdbg	vdel
# 	vdir	vencrypt	verror	vgencomp	vhencrypt
# 	view	virtual	vlib	vlog	vmake
# 	vmap	vopt	vsim	vsim_break	vsimAuth
# 	vsimDate	vsimId	vsimVersion	vsimVersionString
# 	vsource	vwait	when	where	while
# 	winfo	wlf2log	wlf2vcd	wlfman	wlfrecover
# 	wm	write	xml2ucdb
# 
help
# Type help <command> to get information on that command, or try one of the following:
#   commands  List all available commands and topics.
#   Debugging Lists debugging commands.
#   Execution Information on controlling execution of the simulation.
#   Tcl       Information on Tcl commands.
#   Tk        Information on Tk commands.
#   incrTcl   Information on incrTcl commands.
# 
help Debugging
# See these commands for debugging operations:  bp bd when examine step run change add delete force.
help change
# The change command modifies the value of a VHDL constant, generic, or variable; Verilog register or variable; or C variable if running C Debug.
# Usage: change <variable> <value>
help
# Type help <command> to get information on that command, or try one of the following:
#   commands  List all available commands and topics.
#   Debugging Lists debugging commands.
#   Execution Information on controlling execution of the simulation.
#   Tcl       Information on Tcl commands.
#   Tk        Information on Tk commands.
#   incrTcl   Information on incrTcl commands.
# 
help commands
# Help avaliable on the following topics and commands:
# 	abort	add	add_cmdhelp	add_menu
# 	add_menucb	add_menuitem	add_menurb	add_separator
# 	add_submenu	addTime	after	alias
# 	append	apply_button_adder	array	batch_mode
# 	bd	bedit	bell	bgerror	binary
# 	bind	bindtags	body	bp	break
# 	button	call	canvas	catch	cd
# 	cdbg	change	change_menu_cmd	check
# 	checkbutton	checkpoint	class	clipboard
# 	clock	close	code	concat	config
# 	configure	cont	context	continue	dde
# 	Debugging	debugging	delete	describe	destroy
# 	disable_menu	disable_menuitem	disablebp
# 	divTime	do	down	drivers	dumplog64
# 	echo	edit	elite_edition	enable_menu
# 	enable_menuitem	enablebp	encoding	ensemble
# 	entry	env	environment	environment_nosource
# 	eof	eqTime	error	eval	event
# 	exa	examine	exec	execution	exit
# 	expr	fblocked	fconfigure	fcopy	file
# 	fileevent	find	findExec	flush	focus
# 	font	for	force	foreach	format
# 	formatTime	frame	get_menu_path	getactivecursortime
# 	getactivemarkertime	gets	ginfo	glob
# 	global	grab	grid	gteTime	gtTime
# 	help	history	http	if	image
# 	incr	incrTcl	info	int64ToReal
# 	int64ToStr	interp	intToTime	jobspy	join
# 	label	lappend	layout	lecho	left
# 	lindex	linsert	list	listbox	llength
# 	load	local	log	lower	lrange
# 	lremove	lreplace	lsearch	lset	lshift
# 	lsort	lsublist	lteTime	ltTime	luniq
# 	max	menu	menubutton	message	msgcat
# 	mulTime	namespace	namespaceOf	neqTime
# 	next	noforce	nolog	notepad	notrace
# 	noview	nowhen	onbreak	onElabError
# 	onerror	onfinish	open	openlog	option
# 	pack	package	panedwindow	parray
# 	pathOf	pause	pedit	personal_edition
# 	pid	place	pop	precision	PrefSource
# 	PrefSource(geometry)	PrefSource(HDLFileTypes)	PrefSource(HighlightErrorColor)
# 	PrefSource(highlightExecutableLines)	PrefSource(tabs)	PrefSource(user_hook)
# 	PrefSource(verilogFileTypes)	PrefSource(vhdlFileTypes)	PrefSource(WarnSourceChanged)
# 	printenv	proc	project	property	push
# 	puterr	puts	pwd	qhdel	qhdir
# 	qhlib	questasim	quietly	quit	qverilog
# 	qvhcom	qvlcom	radiobutton	radix
# 	raise	read	readers	RealToTime	regexp
# 	registry	regsub	rename	renamelog	report
# 	restart	restore	resume	return	right
# 	rincr	run	runStatus	sbrk	scale
# 	scaleTime	scan	sccom	scgenmod	scope
# 	scrollbar	sdfcom	search	searchlog	see
# 	seek	seetime	selection	send	set
# 	setenv	shift	Show	show	simNamespaceIsOpen
# 	simstats	simtime	slave_mode	socket	source
# 	spinbox	split	status	step	stop
# 	string	subst	subTime	suppress	switch
# 	tabset	tb	tcheck_set	tcheck_status
# 	Tcl	tcl_endOfWord	tcl_findLibrary
# 	tcl_startOfNextWord	tcl_startOfPreviousWord	tcl_wordBreakAfter
# 	tcl_wordBreakBefore	tell	text	time
# 	tix	Tk	tk	tk_chooseColor
# 	tk_chooseDirectory	tk_dialog	tk_getOpenFile
# 	tk_getSaveFile	tk_menuSetFocus	tk_messageBox
# 	tk_popup	tk_textCopy	tk_textCut	tk_textPaste
# 	tkwait	toggle	toplevel	trace	transcribe
# 	transcript	truncate	tssi2mti	typespec	ui_VVMode
# 	unknown	unset	unsetenv	up	update
# 	uplevel	upvar	usual	validTime	variable
# 	vcd	vcd2wlf	vcom	vdbg	vdel
# 	vdir	vencrypt	verror	vgencomp	vhencrypt
# 	view	virtual	vlib	vlog	vmake
# 	vmap	vopt	vsim	vsim_break	vsimAuth
# 	vsimDate	vsimId	vsimVersion	vsimVersionString
# 	vsource	vwait	when	where	while
# 	winfo	wlf2log	wlf2vcd	wlfman	wlfrecover
# 	wm	write	xml2ucdb
# 
help vcom
# The vcom command compiles VHDL source code into a specified working library (or to the work library by default). Type 'vcom -help' for complete syntax.
# Usage: vcom
vcom -help
# QuestaSim-64 vcom 10.1c Compiler 2012.07 Jul 27 2012
# Usage: vcom [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -32                Run in 32-bit mode
#   -64                Run in 64-bit mode
#   -work <path>       Specify library WORK
#   -error <msgNumber>[,<msgNumber>...]
#                      Report the listed messages as errors
#   -warning <msgNumber>[,<msgNumber>...]
#                      Report the listed messages as warnings
#   -note <msgNumber>[,<msgNumber>...]
#                      Report the listed message as notes
#   -suppress <msgNumber>[,<msgNumber>...]
#                      Suppress the listed messages
#   -msglimit <msgNumber>[,<msgNumber>...]
#                      Limit the reporting of listed messages
#   -87                Enable support for VHDL 1076-1987
#   -93                Enable support for VHDL 1076-1993
#   -2002              Enable support for VHDL 1076-2002
#   -2008              Enable support for VHDL 1076-2008
#                      Refer to the technote docs/technotes/vhdl2008.note
#                      for a list of the currently supported 2008 features.
#   -check_synthesis   Check for compliance to some synthesis rules
#   +acc[=<spec>]
#                      Enable access to certain objects which might otherwise be
#                      optimized away.
#                      These modifiers help maximize simulation performance while
#                      retaining access to objects of interest.
#                      The effect of this option is limited only to those design units
#                      being compiled in the current vcom session.
#                      By default, +acc has effect on all kinds of design objects.
#                      <spec> is used to target more precisely certain kinds of objects.
#                      <spec> consists of one or more of the following letter codes:
#                         f (finite state machine recognition and debugging)
#                         v (variables, constants, and aliases)
#                      When no valid <spec> characters are specified, the entire set
#                      is enabled.
#   -bindAtCompile     Perform default binding at compile time
#   -bindAtLoad        Perform default binding when the design is loaded
#   -amsstd            Add VHDL-AMS declarations to package STANDARD
#   -noamsstd          Do not add VHDL-AMS declarations to package STANDARD
#   -ignoreStandardRealVector Ignore the VHDL-2008 declaration of REAL_VECTOR in package STANDARD
#   -nocoversub        Ignore VHDL subprograms for code coverage
#   -coversub          Include VHDL subprograms for code coverage
#   -coverrespecthandl  Inform code coverage optimizations to look for H and L signal values
#   -nocoverrespecthandl  Inform code coverage optimizations to ignore H and L signal values
#   -separateConfigLibrary  Allows VHDL configuration decls in different library from corresponding entity
#   +cover[=<spec>]
#                      <spec> is used to enable code coverage metrics for certain
#                      kinds of constructs.
#                      <spec> consists of one or more of the following letter codes:
#                         s (statement)
#                         b (branch)
#                         c (condition)
#                         e (expression)
#                         f (finite state machine)
#                         t (toggle)
#                         x (extended toggle)
#                      If no <spec> characters are given, sbceft is the default.
#   -coveropt <i>      Specify a digit for code coverage optimization level: 1 through 4.
#   -coverexcludedefault Automatically exclude case default clauses.
#   -coverfec          Enable Focused Expression Coverage analysis for conditions and expressions.
#   -nocoverfec        Disable Focused Expression Coverage analysis for conditions and expressions.
#   -coverudp          Enable UDP Coverage analysis for conditions and expressions.
#   -nocoverudp        Disable UDP Coverage analysis for conditions and expressions.
#   -nocovershort      Disable short circuiting of expressions/condition when coverage is enabled.
#   -nocoverexcludedefault Don't automatically exclude case default clauses.
#   -constimmedassert  Show constant immediate assertions in GUI/UCDB/reports etc.
#   -togglecountlimit n Quit collecting toggle info after count n is reached.
#   -togglewidthlimit n Don't collect toggle data on reg's or arrays wider than n.
#   -extendedtogglemode [1|2|3]
#                      Change the level of support for extended toggles.
#                      The levels of support are:
#                      1 - 0L->1H & 1H->0L & any one 'Z' transition (to/from 'Z')
#                      2 - 0L->1H & 1H->0L & one transition to 'Z' & one transition from 'Z'
#                      3 - 0L->1H & 1H->0L & all 'Z' transitions
#   -toggleportsonly   Enable toggle statistics collection only for ports.
#   -maxudprows n      Max number of rows allowed in UDP tables for code coverage.
#   -maxfecrows n      Max number of input patterns allowed in FEC table for code coverage.
#   -coverreportcancelled Report coverage items that have been optimized away.
#   -debugVA           Print VITAL cell optimization information
#   -defercheck        Defer all compile-time range checking on constant index and
#                      slice expressions until run time
#   -deferSubpgmCheck  Defer compile-time range checking on constant index and
#                      slice expressions in subprograms until run time
#   -explicit          Resolve resolution conflicts in favor of explicit functions
#   -f <path>          Specify a file containing more command line arguments
#   -force_refresh     Force a refresh of the library image from .dat file(s)
#                      even if there are dependency errors
#   -nofsmresettrans   Disable recognition of implicit asynchronous reset transitions for FSMs
#   -fsmresettrans     Enable recognition of implicit asynchronous reset transitions for FSMs
#   -nofsmsingle       Disable recognition FSMs having single bit current state variable
#   -fsmsingle         Enable recognition FSMs having single bit current state variable
#   -fsmimplicittrans  Enable recognition of implicit transitions in FSMs
#   -nofsmimplicittrans Disable recognition of implicit transitions in FSMs
#   -fsmmultitrans     Enable recognition of Multi-state transitions in FSMs
#   -fsmverbose [b|t|w]
#                      Provides information about FSMs recognized, including state reachability analysis.
#                      There are three detail levels that can be set with this option.
#                         b (displays only basic information)
#                         t (displays a transition table in addition to the basic information)
#                         w (displays any warning messages in addition to the basic information)
#                      If no character is specified, btw is the default.
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified design unit in XML format
#   -ignoredefaultbinding
#                      Do not generate a default binding during compilation
#   -ignorevitalerrors Ignore VITAL compliance errors
#   -initoutcompositeparam
#                      Initialize array and record mode OUT parameters of subprograms
#   -noinitoutcompositeparam
#                      Do not initialize array and record mode OUT parameters of subprograms
#   -just eapbc        Compile only selected design unit kinds
#                      (e=entity, a=arch, p=package, b=body, c=config)
#   -l <filename>      Write compilation log to <filename>
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   -modelsimini <modelsim.ini>
#                      Specify path to the modelsim.ini file.
#   -no1164            Disable optimization for the std_logic_1164 package (same as "-noaccel std_logic_1164")
#   -noaccel <pname>   Disable optimization for the specified package
#   -nocasestaticerror Suppress case statement non-static choice warning
#   -lower             Save all identifiers as lower case names
#   -preserve          Keep case of identifiers, does not make VHDL case sensitive
#   -oldconfigvis      Use pre-6.7 non-lrm compilent visibility for use clauses in configurations
#   -lrmconfigvis      Use lrm compilent visibility for use clause in configurations
#   -nocheck           Disable run-time range and index checks
#   -nodebug[=ports][=pli][=ports+pli]
#                      Do not put symbolic debugging information into the library
#   -nodbgsym
#                      Do not generate symbols debugging database
#   -noDeferSubpgmCheck
#                      Perform compile-time range checking on constant index and
#                      slice expressions in subprograms at compile-time
#   -noindexcheck      Disable run-time index checks
#   -nologo            Disable startup banner
#   -noothersstaticerror Suppress array aggregate non-static OTHERS choice warning
#   -nopsl             Disable embedded PSL language parsing
#   -norangecheck      Disable run-time range checks
#   -novital           Disable all VITAL optimizations
#   -novitalcheck      Disable VITAL Level 1 compliance checking and optimizations
#   -novopt            Do not run the "vopt" compiler before simulation
#   -nowarn <number>   Disable specified category of warning messages; verror 1907 to see them
#   -noconstimmedassert  Do not show constant immediate assertions in GUI/UCDB/reports etc.
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   -pedanticerrors    Enforce strict language checks
#   -performdefaultbinding
#                      Enable default binding when it has been disabled with the
#                      RequireConfigForAllDefaultBinding modelsim.ini variable
#   -permissive        Relax some language error checks to warnings.
#   +protect[=<file>]  Enable use of `protect...`endprotect compiler directives
#   -pslext            Enable PSL LTL/Universal operators
#   -pslfile <file>    Compile and bind PSL vunits specified by <file>
#   -quiet             Disable 'Loading' messages
#   -rangecheck        Enable run-time range checks
#   -refresh           Refresh the library image from .dat file(s)
#   -s                 Do not load package std.standard
#   -skipsynthoffregion Ignore all constructs within synthesis_off or translate_off pragma regions.
#   -skip eapbc        Compile all but selected design unit kinds
#                      (e=entity, a=arch, p=package, b=body, c=config)
#   -source            Print the source line with error messages
#   -svext[=[+|-]<extension>[,[+|-]<extension>]*]
#                      Enable SystemVerilog language extensions.
#                      Valid extensions are:
#                      feci - Treat constant expressions in foreach loop variable indices as constant.
#                      pae - Automatically export all symbols imported and referenced in a package.
#                      uslt - Promote unused design units to top-level design units.
#                      spsl - Search for packages in source libraries specified with -y and +libext.
#   -vitalmemorycheck  Enable VITAL Level 1 Memory model compliance checking
#   -mixedsvvh [b | l | r] [i]
#                      Facilitates using a VHDL package at the SV-VHDL mixed-language boundary.
#                         b - treat scalars/vectors in the package as bit
#                         l - treat scalars/vectors in the package as logic
#                         r - treat scalars/vectors in the package as reg
#                         i - ignore range specified with VHDL integer types
#   -vopt              Run the "vopt" compiler before simulation
#   -vmake             Collects complete list of command line args for use by vmake.
#   -showsubprograms   Allows VHDL subprograms to be entered into the vsim context tree.
#   -noshowsubprograms Disallows VHDL subprograms to be entered into the vsim context tree.
help force
# The force command allows you to apply stimulus interactively to VHDL signals and Verilog nets.
# Usage: force [-freeze | -drive | -deposit] [-cancel <time>] [-repeat <time>] <object_name> {<value> [[@]<time>[<unit>]]}...
vsim lc3_datapath.v
# vsim lc3_datapath.v 
# ** Error: (vsim-19) Failed to access library 'lc3_datapath' at "lc3_datapath".
# No such file or directory. (errno = ENOENT)
# Error loading design
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v failed with 1 errors.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3_datapath.v was successful.
pwd
# /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog
vcom ../verilog/lc3_datapath.v
# QuestaSim-64 vcom 10.1c Compiler 2012.07 Jul 27 2012
# -- Loading package STANDARD
# ** Error: ../verilog/lc3_datapath.v(1): near "default_": 
# ** Error: ../verilog/lc3_datapath.v(1): VHDL Compiler exiting
# /net/fpga2/questasim10.1c/questasim/linux_x86_64/vcom failed.
vcom
vlog -reportprogress 300 -work work /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3.v
# QuestaSim-64 vlog 10.1c Compiler 2012.07 Jul 27 2012
# -- Compiling module lc3
# 
# Top level modules:
# 	lc3
vlog -reportprogress 300 -work work /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_control.v
# QuestaSim-64 vlog 10.1c Compiler 2012.07 Jul 27 2012
# -- Compiling module lc3_control
# ** Error: /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_control.v(105): near "SR1": syntax error, unexpected IDENTIFIER
vlog -reportprogress 300 -work work /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_datapath.v
# QuestaSim-64 vlog 10.1c Compiler 2012.07 Jul 27 2012
# -- Compiling module lc3_datapath
# 
# Top level modules:
# 	lc3_datapath
vlog -reportprogress 300 -work work /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3.v
# QuestaSim-64 vlog 10.1c Compiler 2012.07 Jul 27 2012
# -- Compiling module lc3
# 
# Top level modules:
# 	lc3
vlog -reportprogress 300 -work work /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_control.v
# QuestaSim-64 vlog 10.1c Compiler 2012.07 Jul 27 2012
# -- Compiling module lc3_control
# 
# Top level modules:
# 	lc3_control
vlog -reportprogress 300 -work work /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_datapath.v
# QuestaSim-64 vlog 10.1c Compiler 2012.07 Jul 27 2012
# -- Compiling module lc3_datapath
# 
# Top level modules:
# 	lc3_datapath
vcom ../verilog/lc3.v
# QuestaSim-64 vcom 10.1c Compiler 2012.07 Jul 27 2012
# -- Loading package STANDARD
# ** Error: ../verilog/lc3.v(1): near "default_": 
# ** Error: ../verilog/lc3.v(1): VHDL Compiler exiting
# /net/fpga2/questasim10.1c/questasim/linux_x86_64/vcom failed.
vcom -work work ../verilog/lc3.v 
# QuestaSim-64 vcom 10.1c Compiler 2012.07 Jul 27 2012
# -- Loading package STANDARD
# ** Error: ../verilog/lc3.v(1): near "default_": 
# ** Error: ../verilog/lc3.v(1): VHDL Compiler exiting
# /net/fpga2/questasim10.1c/questasim/linux_x86_64/vcom failed.
vcom -work work ../verilog/lc3_datapath.v
# QuestaSim-64 vcom 10.1c Compiler 2012.07 Jul 27 2012
# -- Loading package STANDARD
# ** Error: ../verilog/lc3_datapath.v(1): near "default_": 
# ** Error: ../verilog/lc3_datapath.v(1): VHDL Compiler exiting
# /net/fpga2/questasim10.1c/questasim/linux_x86_64/vcom failed.
vsim lc3_datapath
# vsim lc3_datapath 
# ** Note: (vsim-3812) Design is being optimized...
# Loading work.lc3_datapath(fast)
add wave -position insertpoint  \
sim:/lc3_datapath/clk \
sim:/lc3_datapath/rst \
sim:/lc3_datapath/aluControl \
sim:/lc3_datapath/enaALU \
sim:/lc3_datapath/SR1 \
sim:/lc3_datapath/SR2 \
sim:/lc3_datapath/DR \
sim:/lc3_datapath/regWE \
sim:/lc3_datapath/selPC \
sim:/lc3_datapath/enaMARM \
sim:/lc3_datapath/selMAR \
sim:/lc3_datapath/selEAB1 \
sim:/lc3_datapath/selEAB2 \
sim:/lc3_datapath/enaPC \
sim:/lc3_datapath/ldPC \
sim:/lc3_datapath/ldIR \
sim:/lc3_datapath/ldMAR \
sim:/lc3_datapath/ldMDR \
sim:/lc3_datapath/selMDR \
sim:/lc3_datapath/memWE \
sim:/lc3_datapath/flagWE \
sim:/lc3_datapath/enaMDR \
sim:/lc3_datapath/IR_OUT \
sim:/lc3_datapath/N_OUT \
sim:/lc3_datapath/Z_OUT \
sim:/lc3_datapath/P_OUT
force -freeze sim:/lc3_datapath/clk 1 0, 0 {10 ps} -r 20
run 10000 ns
force -freeze sim:/lc3_datapath/rst HiZ 0
help force
# The force command allows you to apply stimulus interactively to VHDL signals and Verilog nets.
# Usage: force [-freeze | -drive | -deposit] [-cancel <time>] [-repeat <time>] <object_name> {<value> [[@]<time>[<unit>]]}...
help change
# The change command modifies the value of a VHDL constant, generic, or variable; Verilog register or variable; or C variable if running C Debug.
# Usage: change <variable> <value>
force -drive sim:/lc3_datapath/rst 1 0
run 1000 ns
force -drive sim:/lc3_datapath/rst 1 0
run 100000 ns
force -drive sim:/lc3_datapath/rst 1 0
reset
# reset: standard error: Inappropriate ioctl for device
# 
sim reset
# bad option "reset": must be blank, cget, configure, copy, data, get, put, read, redither, transparency, or write
run 1000 ns
# Causality operation skipped due to absense of debug database file
quit -sim
vsim 
# Load canceled
vsim lc3_datapath
# vsim lc3_datapath 
# Loading work.lc3_datapath(fast)
add wave -position insertpoint  \
sim:/lc3_datapath/clk \
sim:/lc3_datapath/rst
force -drive sim:/lc3_datapath/rst 1 0
run 100 ns
add wave -position insertpoint  \
sim:/lc3_datapath/aluControl \
sim:/lc3_datapath/enaALU \
sim:/lc3_datapath/SR1 \
sim:/lc3_datapath/SR2 \
sim:/lc3_datapath/DR \
sim:/lc3_datapath/regWE \
sim:/lc3_datapath/selPC \
sim:/lc3_datapath/enaMARM \
sim:/lc3_datapath/selMAR \
sim:/lc3_datapath/selEAB1 \
sim:/lc3_datapath/selEAB2 \
sim:/lc3_datapath/enaPC \
sim:/lc3_datapath/ldPC \
sim:/lc3_datapath/ldIR \
sim:/lc3_datapath/ldMAR \
sim:/lc3_datapath/ldMDR \
sim:/lc3_datapath/selMDR \
sim:/lc3_datapath/memWE \
sim:/lc3_datapath/flagWE \
sim:/lc3_datapath/enaMDR
force -drive sim:/lc3_datapath/aluControl 00 0
force -drive sim:/lc3_datapath/enaALU 0 0
force -drive sim:/lc3_datapath/SR1 000 0
force -drive sim:/lc3_datapath/SR2 000 0
force -drive sim:/lc3_datapath/DR 000 0
force -freeze sim:/lc3_datapath/regWE 0 0
force -freeze sim:/lc3_datapath/selPC 00 0
force -freeze sim:/lc3_datapath/enaMARM 0 0
force -freeze sim:/lc3_datapath/selMAR 0 0
force -drive sim:/lc3_datapath/selEAB1 0 0
force -freeze sim:/lc3_datapath/selEAB2 00 0
force -freeze sim:/lc3_datapath/enaPC 0 0
force -freeze sim:/lc3_datapath/ldPC 0 0
force -freeze sim:/lc3_datapath/ldIR 0 0
force -drive sim:/lc3_datapath/ldMAR 0 0
force -drive sim:/lc3_datapath/ldMDR 0 0
force -freeze sim:/lc3_datapath/selMDR 0 0
force -freeze sim:/lc3_datapath/memWE 0 0
force -freeze sim:/lc3_datapath/flagWE 0 0
force -freeze sim:/lc3_datapath/enaMDR 0 0
run 1000 ns
add wave -position insertpoint  \
sim:/lc3_datapath/IR_OUT \
sim:/lc3_datapath/N_OUT \
sim:/lc3_datapath/Z_OUT \
sim:/lc3_datapath/P_OUT
help Debugging
# See these commands for debugging operations:  bp bd when examine step run change add delete force.
help examine
# The examine command examines one or more objects and displays current values (or the values at a specified previous time) in the Transcript pane. It optionally can compute the value of an expression of one or more objects. If you are using C Debug , examine can display the value of a C variable as well.
# Usage: examine [-delta <delta>] [-env <path>] [-event <time>] [-handle] {[-in] [-out] [-inout] | [-ports]} [-internal] [-maxlen <integer>] [-expr <expression>] [-name] [-radix_type] [-radix <type>] [-radixenumnumeric | -radixenumsymbolic] [-showbase] [-time <time>] [-value] <name>...
quit -sim 
vsim --help
# ** Error: (vish-3296) Unknown option '--help'.
# Use the -help option for complete vsim usage.
# Error loading design
vsim -help
# Usage: vsim [options] [[<library>.]<primary>[(<secondary>)]]...
#    -help                   Print this message
#    -version                Print the version of the simulator
#    -32                     Run in 32-bit mode
#    -64                     Run in 64-bit mode
# --------------------------- VHDL and Verilog options ---------------------------
#    -assertcover            Keep assertion counts for coverage statistics
#    -assertdebug            Keep data for debugging assertion failures
#    -assertfile <filename>  Alternative file for recording assert messages
#    -errorfile <filename>   Alternative file for recording error messages
#    -assume                 Simulate PSL and Verilog assume directives same as assert directives
#    -autoexclusionsdisable=fsm|assertions|all|none 
#                            Turns on/off automatic fsm or assertions code coverage exclusions
#    -attemptedimmedcovers   Exclude unattempted immediate covers to participate in coverage calculations
#    -c                      Command line mode
#    -capacity               Enable fine grain capacity analysis
#    -compress_elab          In conjunction with -elab, enables compression of
#                            the elab file
#    -codelink=<path>        Specify the path to CODELINK_HOME directory
#    -nocodelink             Ignore the CODELINK_HOME environment variable and
#                            disable codelink loading.
#    -coverage               Allows enabled coverage statistics to be kept
#    -do "<command>"         Execute <command> on startup; <command> can be
#                            a macro filename
#    -displaymsgmode <mode>  Controls transcripting of display system task messages.
#                            Messages will appear in transcript and/or MsgViewer (.wlf file)
#                            Valid modes - tran, wlf, both (Default: tran)
#    +dumpports+direction    Provide port direction info in VCD file for dumpports
#    +dumpports+unique       Provide unique Extended VCD identifier for each port
#    +dumpports+no_strength_range
#                            Ignore strength range when resolving conflicts
#    +dumpports+collapse     Collapse dumpport vectors into single VCD ids
#    +dumpports+nocollapse   Don't collapse dumpport vectors into single VCD ids
#    +dumpports+force_direction
#                            Ignore driver location. Use port direction for input and output ports
#    -elab <filename>        Elaborate a design into a file
#    -elab_cont <filename>   Elaborate a design into a file and simulate
#    -elab_defer_fli         Defer calling FLI initialization routines
#    -error <msgNumber>[,<msgNumber>...]  Change the severity of the listed
#                            messages to Error
#    -f <filename>           Read command line arguments from <filename>
#    -fatal <msgNumber>[,<msgNumber>...]  Change the severity of the listed
#                            messages to Fatal
#    -filemap_elab <HDLfilename>=<NEWfilename>
#                            Define a mapping used during -load_elab
#    -g<Name>=<Value>        Specify generic/parameter default Value for Name
#    -g <Name>=<Value>       Alternate way to specify generic/parameter default Value for Name
#    -G<Name>=<Value>        Override generic/parameter with specified Value
#    -G <Name>=<Value>       Alternate way to override generic/parameter with specified Value
#    -gblso <shared_obj>     Open the specified shared object with global
#                            symbol visibility.
#    -gui                    Open the GUI without loading a design
#    -i                      Force interactive mode
#    -immedassert            Enable SystemVerilog and VHDL immediate assertions
#    -installcolormap        Cause the application to use its own color map
#    -keeploaded             Prevent the simulator from unloading/reloading
#                            shared libraries
#    -keeploadedrestart      Prevent the simulator from unloading/reloading
#                            shared libraries during restart
#    -keepstdout             Do not redirect stdout to transcript window
#    -l <filename>           Write simulation log to <filename>
#                            (Default: transcript)
#    -learn <fname>          Learn the names of objects externally accessed at runtime
#                            (by methods such as PLI, VPI, SignalSpy, or CLI).
#                            <fname>.ocf, <fname>.ocm and <fname>.acc files created
#    -lib <libname>          Load top-level design units from <libname>
#                            (Default: work)
#    -lic_nomti              Do not look for Model Technology Licenses
#    -lic_noqueue            Do not wait in the license queue when a license
#                            is not available
#    -lic_plus               Immediately reserve a VHDL and Verilog license
#    -lic_vhdl               Immediately reserve a VHDL license
#    -lic_vlog               Immediately reserve a Verilog license
#    -lic_no_slvhdl          Disable checkout of qhsimvh and vsim single
#                            language VHDL license features
#    -lic_no_slvlog          Disable checkout of qhsimvl and vsimvlog
#                            single language Verilog license features
#    -lic_no_mix             Disable checkout of msimhdlmix and hdlmix
#                            second language only license features
#    -lic_no_lnl             Disable checkout of msimhdlsim and hdlsim
#                            language neutral license features
#    -lic_mixed_only         Disable checkout of qhsimvh,qhsimvl,vsim,
#                            vsimvlog single language license features
#    -lic_lnl_only           Disable checkout of qhsimvh,qhsimvl,vsim,
#                            vsimvlog,msimhdlmix,hdlmix license features
#    -load_elab <filename>   Load simulation from previous elaboration
#    -memprof                Collect memory allocation profile data for use with
#                            current simulation
#    -memprof[+file=<filename>]
#                            Collect memory allocation profile data for use with
#                            current simulation and copy raw data to <filename>
#    -memprof[+fileonly=<filename>]
#                            Collect memory allocation profile data in raw format
#                            to <filename>
#    -modelsimini <modelsim.ini>
#                            Specify path to the modelsim.ini file
#    -multisource_delay min|max|latest
#                            Controls annotation of SDF INTERCONNECT construct
#                            (Default: max)
#    +multisource_int_delays Enable multisource interconnect delays
#                            for both Verilog and VHDL
#    -msglimit <msgNumber>[,<msgNumber>...]
#                            Limit the listed messages to display five times
#    -msgmode <mode>         Controls transcripting of elaboration/runtime messages.
#                            Messages will appear in transcript and/or MsgViewer (.wlf file)
#                            Valid modes - tran, wlf, both (Default: tran)
#    -mvchome  <path>        Location of Questa Verification IP installation.
#                            Overrides 'MvcHome' modelsim.ini setting
#    -nocompress             Create/restore uncompressed checkpoint file
#    -nocoverage             Passed to vopt to turn off code coverage compile options
#    +no_notifier            Disable notifier toggling for timing constraint
#                            violations
#    -noassertcover          Do not keep assertion counts for coverage statistics
#    -noassertdebug          Do not keep data for debugging assertion failures
#    -noassume               Do not simulate PSL and Verilog assume directives
#    -nocapacity             Do not display capacity related information
#    -noexcludehiz           Do not automatically exclude rows with Hi-Z for
#                            expression coverage
#    -nopsl                  Disable PSL assertions
#    -noschematic            Used with -debugdb, generate debugdb for Dataflow only
#    -nostdout               Do not write transcript to stdout (batch mode only)
#    +no_tchk_msg            Disable timing constraint error messages
#    -note <msgNumber>[,<msgNumber>...]  Change the severity of the listed
#                            messages to Note
#    +notimingchecks         Disable Verilog and VITAL timing checks
#    -novhdlvariablelogging  Disables higher performance VHDL variable logging
#    -novopt                 Force incremental mode (pre-6.0 behavior)
#    -onfinish <mode>        Customize the kernel shutdown behavior at the end of simulation
#                            Valid modes - ask, stop, exit, final (Default: ask)
#    -pduignore[=<instpath>] Ignore Preoptimized Design Unit.
#                            If optional <instpath> is not specified all PDUs found in
#                            compiled libraries will be ignored. Otherwise the PDU
#                            specified by <instpath> will be ignored. This option may
#                            be specified multiple times with different <instpath>s.
#                            (Equivalent to the deprecated "-ignore_bbox" option).
#    -pa                     Enable PowerAware RTL mode
#    -pa_lib <libname>       Use PA specific dumps from <libname> library. (Default: work)
#    -pa_top <dut path>      Allow vsim to use different top level hierarchy for PA
#                            (Example: -pa_top /tb2/dut_inst
#    -debugdb[=<dbname>]     To create or use Schematic Debug database (Default: vsim.dbg)
#    -pedanticerrors         Enforce strict language checks
#    -permissive             Relax some language error checks to warnings.
#    -printsimstats[=value]  Print simstats results
#    			Possible values: 0 - disable simstats, 1 - end of simulation
#    			Possible values: 2 - end of each run,  3 - end of run and simulation
#    -psl                    Enable PSL assertions
#    -psloneattempt          Force single PSL assertion coverage attempt
#    -pslinfinitythreshold   Redefine infinite clock tick for strong operators
#    -quiet                  Do not report 'Loading...' messages
#    -restore <filename>     Restore simulation from previous checkpoint
#    -runinit                Execute run -init before command prompt or running -do files.
#    -sdfmax[@<delayScale>] [<instance>=]<sdffile>
#                            Annotate VITAL or Verilog <instance> with maximum
#                            timing from <sdffile>, scaled by <delayScale>
#    -sdfmaxerrors <n>       Max number of missing instances reported (default is 5)
#    -sdfmin[@<delayScale>] [<instance>=]<sdffile>
#                            Annotate VITAL or Verilog <instance> with minimum
#                            timing from <sdffile>, scaled by <delayScale>
#    -sdfnoerror             Treat SDF errors as warnings
#    -sdfnowarn              Disable warnings from SDF annotator
#    -sdftyp[@<delayScale>] [<instance>=]<sdffile>
#                            Annotate VITAL or Verilog <instance> with typical
#                            timing from <sdffile>, scaled by <delayScale>
#    +sdf_verbose            Display SDF annotator status messages
#    -suppress <msgNumber>[,<msgNumber>...]  Suppress the listed messages
#    -t [1|10|100]fs|ps|ns|us|ms|sec  Time resolution limit
#                            (VHDL default: resolution setting from .ini file)
#                            (Verilog default: minimum time_precision in the
#                            design)
#    -tag <string>           Set tag for FLI/PLI tracing to <string>
#    -notoggleints           Excludes VHDL integers from toggle coverage
#    -togglemaxintvalues     Sets max number of values saved for VHDL integers
#    -togglemaxrealvalues    Sets max number of values saved for SystemVerilog reals
#    -togglemaxfixedsizearray <size>
#                            Sets the limit on the size of Verilog unpacked fixed-size arrays
#                            that are included for toggle coverage
#    -togglecountlimit       Sets max count saved for a toggle node
#    -togglewidthlimit       Sets max width for vectors counted for toggles
#    -togglevlogreal         Includes Verilog real type in toggle coverage
#    -togglefixedsizearray   Includes Verilog unpacked fixed-size arrays, VHDL multi-d arrays and VHDL arrays-of-arrays in toggle coverage
#    -togglevlogints         Includes Verilog integers for toggle coverage
#    -notogglevlogints       Excludes Verilog integers from toggle coverage
#    -notogglevlogreal       Excludes Verilog real type in toggle coverage
#    -notogglefixedsizearray Excludes Verilog unpacked fixed-size arrays, VHDL multi-d arrays and VHDL arrays-of-arrays in toggle coverage
#    -togglepackedasvec      Treat SystemVerilog packed structures and multi-d arrays as flattened vectors
#    -togglevlogenumbits     Treat SystemVerilog enums as reg-vectors for toggle coverage
#    -extendedtogglemode [1|2|3]
#                            Change the level of support for extended toggles.
#                            The levels of support are:
#                            1 - 0L->1H & 1H->0L & any one 'Z' transition (to/from 'Z')
#                            2 - 0L->1H & 1H->0L & one transition to 'Z' & one transition from 'Z'
#                            3 - 0L->1H & 1H->0L & all 'Z' transitions
#    -toggleportsonly        Enable toggle statistics collection only for ports
#    -title <string>         Optional title for the Main window
#    -trace_foreign <n>      Set FLI/PLI tracing to level <n>
#    -ucdbteststatusmsgfilter <TCL style regular expression>
#                            Matching messages do not propagate their status to UCDB TESTSTATUS
#    -unattemptedimmed       Include immediate assertions to participate in assertion coverage calculations
#    -valgrind "[options]"   same as SystemC -valgrind option
#    -vcdstim [<instance>=]<filename>  Stimulate the top-level design or instances
#                            from an Extended VCD file
#    -vhdlvariablelogging    Enables higher performance VHDL variable logging
#    -view [<dataset>=]<filename>  View the contents of a WLF file
#    -viewcov [<dataset>=]<ucdbfilename>  View the contents of the coverage ucdb file
#    -vopt                   Run vopt optimization before elaborating the simulator
#    -voptargs="<arglist>"   Pass the specified arguments to vopt
#    -warning <msgNumber>[,<msgNumber>...]  Change the severity of the listed
#                            messages to Warning
#    -wlf <filename>         Specify the name of the WLF file (Default: vsim.wlf)
#    -wlfopt                 Turn on WLF file optimizations (default)
#    -nowlfopt               Turn off WLF file optimizations
#    -nowlfcompress          Turn off WLF file compression
#    -nowlflock              Turn off WLF file locking
#    -wlfslim <size>         Specify maximum number of Megabytes to be saved in
#                            WLF file (Default: infinite)
#    -wlftlim <duration>     Specify maximum duration of time to be saved in
#                            WLF file (Default: all)
#    -wlfcachesize <n>       Specify WLF reader cache size (per WLF file.)
#                            (Default: no reader cache)
#    -wlfsimcachesize <n>    Specify WLF reader cache size for current simulation
#                            (Default: no reader cache)
#    -wlfdeleteonquit        Delete WLF file when simulation quits.
#    -nowlfcollapse          Log every item event and preserve event order.
#    -wlfcollapsedelta       Log item values only at end of iteration. (default)
#    -wlfcollapsetime        Log item values only at end of time step.
# --------------------------------- VHDL options ---------------------------------
#    -absentisempty          Treat non-existent VHDL files opened for read
#                            as empty
#    -foreign "<C_init_func> <shared_lib>"  Load a foreign module
#    -nocollapse             Disable optimization of internal port map connections
#    -nofileshare            Do not share file descriptors for VHDL files opened
#                            for write or append that have identical names
#    -noglitch               Disable VITAL glitch generation
#    +no_glitch_msg          Disable glitch error messages
#    -std_input <filename>   Use filename for VHDL textio STD_INPUT file
#    -std_output <filename>  Use filename for VHDL textio STD_OUTPUT file
#    -strictvital            Sacrifice performance for strict VITAL compliance
#    -vcdread <filename>     Stimulate the VHDL top-level design from a VCD file
#    -vital2.2b              Select SDF mapping for VITAL 2.2b (Default: VITAL 95)
#    -vital_fix_negative_setup_hold_sum
#                            Set negative time to zero when setuphold sum is negative
# -------------------------------- Verilog options -------------------------------
#    +alt_path_delays        Use current output value instead of pending value
#                            when selecting inertial specify path output delay
#    +bitblast[=[iopath|tcheck]] Bit-blast Verilog specify paths and/or tchecks with wide ports.
#                            Without the optional qualifiers operates on specify paths and tchecks.
#                            +bitblast=iopath bit-blasts specify paths with wide ports.
#                            +bitblast=tcheck bit-blasts tchecks with wide ports.
#    -checkvifacedrivers 1|0 Include assignments through virtual interfaces in the multiple-driver analysis.
#    -classdebug             Enable class debug features.
#    -cvgcollapseembeddedinstances Collapse embedded covergroup instances and track coverage data
#                            at per type level when option.per_instance is set to 0.
#    -cvgmaxrptrhscross      Set the maximum cross bin BINRHS terms in coverage report.
#    -cvgperinstance         Force the option.per_instance control in all covergroup declarations to 1.
#    -cvgsingledefaultbin    Collapse a Covergroup default array bin into a scalar bin
#    -cvghaltillbin          Halt simulation when an illegal cover/cross bin gets hit
#    -cvgmergeinstances      Set the default value of covergroup type_option.merge_instances to 1
#    -cvgsparsecross         Force modelling of Covergroup cross bins in a sparse fashion.
#    -cvgsparsearraybin      Force modelling of Covergroup unsize array bins in a sparse fashion.
#    -cvgzwnocollect <1|0>   Turn on/off the coverage data collection of zero-weight coverage items.
#    -cvgbintstamp           Record simulation timestamp when a covergroup bin is covered during simulation run
#    -nocrossautobins        Avoid generating auto bins in cross coverage computation.
#    -dpicpppath </path/to/gcc> Specify desired GCC path for DPI compilation
#    -dpicppinstall <[gcc|g++] version> 
#                            Specify the version of the desired GNU compiler supported and
#                            distributed by Mentor for the DPI compilation
#    -dpiexportcheckref      (Deprecated) Check the staleness of exportwrapper source file generated previously.
#    -dpiexportonly          (Deprecated) Quit simulation after exportwrapper compilation. This is to support locked work library flow.
#    -dpiexportobj <filename> (Deprecated) Generate specified DPI export object file then quit
#    -dpilib    <libname>    Specify the library that contains DPI exports and object files
#    -ldflags   <linkopts>   Specify in quotes the option for linking auto compiled DPI object files
#    -dpiforceheader         Force generation of dpi header file even when empty
#                            of function prototypes
#    -dpiheader <filename>   Generate specified DPI C header file
#    -dpioutoftheblue 1|0    Turn on/off DPI out-of-the-blue call from C function
#    -nodpiexports           (Deprecated) Turn off the exportwrapper generation.
#    -nodpimasking           Turn off masking of unused bits of bit vectors from user C data. 
#    -extend_tcheck_data_limit <percent relaxation> Relax data limit for convergence
#    -extend_tcheck_ref_limit  <percent relaxation> Relax ref limit for convergence
#    +autofindloop           Find the infinite zero-delay loop when Iteration Limit is exceeded.
#                            This option should be used with full design visibility e.g. vopt +acc
#    -hazards                Enable hazard checking
#    +initmem+<seed>         Specify seed value to be used for randomizing
#                            fixed-size arrays marked for randomization by vlog/vopt.
#    +initreg+<seed>         Specify seed value to be used for randomizing
#                            variables marked for randomization by vlog/vopt.
#    +int_delays             Optimize annotation of interconnect delays
#    -L <libname>            Search library for design units instantiated from
#                            Verilog and for VHDL default component binding
#    -Lf <libname>           Same as -L, but libraries are searched before `uselib
#    +maxdelays              Use maximum timing from min:typ:max expressions
#    +mindelays              Use minimum timing from min:typ:max expressions
#    +no_cancelled_e_msg     Disable negative pulse warning messages
#    -noimmedca              Revert to pre-6.5 continuous assignment event ordering
#    +no_neg_tchk            Set negative timing check limits to zero
#    +no_path_edge           Ignore the input edge specification on path delays
#    +no_pulse_msg           Disable path pulse error warning messages
#    +nosdferror             Treat SDF errors as warnings
#    +nosdfwarn              Disable warnings from SDF annotator
#    +no_show_cancelled_e    Cancel negative pulse (Default)
#    +nospecify              Disable specify path delays and timing checks
#    -nosva                  Disable SystemVerilog concurrent assertions
#    -noimmedassert          Disable SystemVerilog and VHDL immediate assertions
#    -nocvg                  Disable Covergroup object construction and builtin calls
#    -nocvgmergeinstances    Set the default value of covergroup type_option.merge_instances to 0
#    -nocvgperinstance       Force the option.per_instance control in all covergroup declarations to 0.
#    +nowarn<CODE | Number>  Disable specified warning message
#                            (Example: +nowarnTFMPC)
#    +ntc_warn               Enable warnings from negative timing constraint
#                            algorithm
#    +ntcnotchks             Disable timing checks while maintaining NTC delays
#    -pli "<object list>"    Load the list of PLI shared objects
#    +<plusarg>              Option accessible by PLI routine mc_scan_plusargs
#    +pulse_e/<percent>      Set path pulse error limit as percentage of
#                            path delay
#    +pulse_e_style_ondetect Drive pulse error state immediately on detection
#    +pulse_e_style_onevent  Drive pulse error state on time of pending event
#                            (Default)
#    +pulse_int_e/<percent>  Set interconnect pulse error limit as percentage
#                            of delay
#    +pulse_int_r/<percent>  Set interconnect pulse rejection limit as
#                            percentage of delay
#    +pulse_r/<percent>      Set path pulse rejection limit as percentage of
#                            path delay
#    +sdf_nocheck_celltype   Disable check between SDF celltype name and
#                            module name
#    +show_cancelled_e       Drive pulse error state on negative pulse
#    -solveengine <engine>   Use specified solver engine to evaluate randomize() scenarios
#                            Valid engines - auto, bdd, act
#    -solvefaildebug         Display constraint conflicts on randomize() failure
#    -solveflags=<flags>     Modify constraint solver behavior for specific testcases
#                            (Example: -solveflags=ri)
#    -solverev <version>     Specify random sequence compatibility with <version>
#                            (Example: -solverev 6.2a)
#    -sv_lib <shared_obj>    DPI shared object, without extension
#    -sv_root <dirname>      Directory name to use as prefix for DPI
#                            shared object lookups
#    -sv_liblist <filename>  The name of a bootstrap file containing names
#                            of DPI shared objects to load
#    -sv_seed <seed>         Specify a seed for the Random Number Generator
#                            (RNG) of the root thread (SystemVerilog)
#    -sva                    Enable SystemVerilog concurrent assertions
#    -tab <filename>         Specify PLI TAB file
#    +transport_int_delays   Use transport mode for interconnect delays
#    +transport_path_delays  Use transport mode for path delays
#                            (Default: inertial)
#    +typdelays              Use typical timing from min:typ:max expressions
#                            (Default)
#    -uvmcontrol=[all,disable,struct,msglog,trlog,certe]
#                            Control specific UVM-aware debug options (default: -uvmcontrol=struct)
#    -v2k_int_delays         Use Verilog 2000 style interconnect delays
#    -wreal_resolution <resolver>
#                            Specify resolve behavior for AMS wreal net
#                            with multiple drivers, where <resolver> is
#                            default, 4state, sum, avg, min, or max.
# -------------------------------- SystemC options -------------------------------
#    -cpppath </path/to/[gcc|g++]> 
#                            Specify path to the desired GNU compiler.
#                            Use same compiler path as specified on the sccom
#                            command line.
#    -cppinstall <[gcc|g++] version> 
#                            Specify the version of the desired GNU compiler
#                            supported and distributed by Mentor.
#                            Use same compiler path as specified on the sccom command line.
#    -noautoldlibpath        Disable setting of LD_LIBRARY_PATH set internally.
#    -sc_arg <arg>           Specify a SystemC command line argument
#                            accessible using sc_main(), sc_argc() and
#                            sc_argv()
#    -scdpidebug             Turn on debugging for SystemC DPI export function call
#    -sclib <libname>        Load the SystemC shared library from <libname>
#                            By default the systemc.so shared library is loaded
#                            from the library in which the top level SystemC design
#                            unit is compiled. This option should be used when systemc.so 
#                            is not in the same library as the top level SystemC design unit.
#    -noscmainscopename      Strip sc_main() scope from the hierarchical path.
#    -valgrind "[options]"   Run valgrind in simulation with user given options
# --------------------------------- MC2 options ----------------------------------
#    -mc2                    Run simulation in MC2 mode
#    -mc2network <hostfile>  Run simulation in multi-computer mode
#    -mc2binding <type>      Run simulation with specified core binding: none, cpu:sockets
#    -mc2grid <lsf/sge>      Run simulation with specified type of the grid
#    -mc2sal <partition>     Run simulation with single partition in standalone VCD mode
#    -mc2mergeucdb <filename> Merge UCDB files from all partitions to given filename
#    -mc2mergewlf <filename> Merge WLF files from all partitions to given filename
#    -mc2vcddump             Generate VCD info to be able to run partition in standalone mode later
#    -mc2commstat            Generate MC2 simulation statistics
#    -mc2savestat[=filename] Save MC2 simulation statistics in given filename
#    -mc2sanitycheck[=warn]  Perform sanity design checks for allowable boundary conditions.
#                            Optional 'warn' argument converts severity of error message to warning
#    -mc2nozerochk           Converts severity of time 0 unicore value mismatch errors to warnings
#    -mc2noidlesyncopt       Disables optimization, which suppresses synchronizations when all
#                            but one partitions are idle
#    -mc2nosuspendopt        Disables suspend optimization
#    -mc2noactivequeueopt    Disables optimization for active queue communication
#    -mc2activequeueopt      Enable optimization for active queue communication
#    -mc2skiptimesyncopt     Enable optimization for reducimng time synchronizations between partitions
#    -mc2vsimargs=<partition> <args>
#                            Specify vsim options for individual partitions
#    -vv                     Print verbose MC2 command line information
#    -mc2synccntl=<sync_control>[,<sync_control>...]
#                            Specify predefined MC2 sync control options for simulation
# Optimization canceled
vsim -noVopt lc3_datapath
# ** Error: (vish-3296) Unknown option '-noVopt'.
# Use the -help option for complete vsim usage.
# Error loading design
vsim -noVOpt lc3_datapath
# ** Error: (vish-3296) Unknown option '-noVOpt'.
# Use the -help option for complete vsim usage.
# Error loading design
vsim -novopt lc3_datapath
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
add wave -position insertpoint  \
sim:/lc3_datapath/BUSS
examlne lc3_datapath/BUSS
# invalid command name "examlne"
examine lc3_datapath/BUSS
# xxxxxxxxxxxxxxxx
set val [examine sim:/lc3_datapath/PC]
# xxxxxxxxxxxxxxxx
print val
# ambiguous command name "print": print_dbg_time print_stacktrace printarray printenv printer
print $val
# ambiguous command name "print": print_dbg_time print_stacktrace printarray printenv printer
help 
# Type help <command> to get information on that command, or try one of the following:
#   commands  List all available commands and topics.
#   Debugging Lists debugging commands.
#   Execution Information on controlling execution of the simulation.
#   Tcl       Information on Tcl commands.
#   Tk        Information on Tk commands.
#   incrTcl   Information on incrTcl commands.
# 
help Tcl
# See help on these commands:
#   after       fcopy      load       seek           vwait    
#   append      file       lrange     set            while    
#   array       fileevent  lreplace   socket         
#   bgerror     flush      lsearch    source   	   
#   binary      for        lset       split    	   
#   break       foreach    lsort      string         
#   catch       format     msgcat     subst           
#   cd          gets       namespace  switch         
#   clock       glob       open       tcl_endOfWord           
#   close       global     package    tcl_findLibrary         
#   concat      history    parray     tcl_startOfNextWord     
#   continue    http       pid        tcl_startOfPreviousWord  
#   dde         if         proc       tcl_wordBreakAfter             
#   encoding    incr       puts       tcl_wordBreakBefore            
#   eof         info       pwd        tell        	           
#   error       interp     read       time        	           
#   eval        join       regexp     trace       	           
#   exec        lappend    registry   unset                          
#   exit        lindex     regsub     update                   
#   expr        linsert    rename     uplevel                  
#   fblocked    list       return     upvar                    
#   fconfigure  llength    scan       variable                
# 
help tk
# Tk command:  Manipulate Tk internal state.
# Usage: tk <option> [<arg> <arg> ...]
show
# Process SSIGN#130 {
#    {Module ..}
#    {{Packed Array} PC}
#    {{Packed Array} IR}
#    {{Packed Array} MAR}
#    {{Packed Array} MDR}
#    {Register N}
#    {Register Z}
#    {Register P}
#    {{Fixed-size Array} REGFILE}
#    {{Fixed-size Array} MEMORY}
#    {{Packed Array} PCMUX}
#    {{Packed Array} ADDR2MUX}
#    {{Packed Array} ALU}
# }
eval [val]
# ambiguous command name "val": validTime validTimeUnit valueWidget
set val "hello" 
# hello
eval [val]
# ambiguous command name "val": validTime validTimeUnit valueWidget
puts val
puts $val
puts "$val"
set val "hello"
# hello
puts "hello"
puts 1 "hello"
# can not find channel named "1"
puts 0 "hello"
# can not find channel named "0"
help puts
# Tcl command:  Write to a channel
# Usage: puts [-nonewline] [<channelId>] <string>
examine PC
# xxxxxxxxxxxxxxxx
help examine 
# The examine command examines one or more objects and displays current values (or the values at a specified previous time) in the Transcript pane. It optionally can compute the value of an expression of one or more objects. If you are using C Debug , examine can display the value of a C variable as well.
# Usage: examine [-delta <delta>] [-env <path>] [-event <time>] [-handle] {[-in] [-out] [-inout] | [-ports]} [-internal] [-maxlen <integer>] [-expr <expression>] [-name] [-radix_type] [-radix <type>] [-radixenumnumeric | -radixenumsymbolic] [-showbase] [-time <time>] [-value] <name>...
examine -radix hex PC
# xxxx
help tcl
# Ambiguous command name "tcl": tcl_endOfWord, tcl_findLibrary, tcl_startOfNextWord, tcl_startOfPreviousWord, tcl_wordBreakAfter, tcl_wordBreakBefore
help TCL
# No help for TCL available.
help Tcl
# See help on these commands:
#   after       fcopy      load       seek           vwait    
#   append      file       lrange     set            while    
#   array       fileevent  lreplace   socket         
#   bgerror     flush      lsearch    source   	   
#   binary      for        lset       split    	   
#   break       foreach    lsort      string         
#   catch       format     msgcat     subst           
#   cd          gets       namespace  switch         
#   clock       glob       open       tcl_endOfWord           
#   close       global     package    tcl_findLibrary         
#   concat      history    parray     tcl_startOfNextWord     
#   continue    http       pid        tcl_startOfPreviousWord  
#   dde         if         proc       tcl_wordBreakAfter             
#   encoding    incr       puts       tcl_wordBreakBefore            
#   eof         info       pwd        tell        	           
#   error       interp     read       time        	           
#   eval        join       regexp     trace       	           
#   exec        lappend    registry   unset                          
#   exit        lindex     regsub     update                   
#   expr        linsert    rename     uplevel                  
#   fblocked    list       return     upvar                    
#   fconfigure  llength    scan       variable                
# 
puts "hi"
puts stdout "hello"
flush
# wrong # args: should be "flush channelId"
flush $stdout
# can't read "stdout": no such variable
flush stdout
puts { "hello" }
puts { hello }
puts { 
hello
{
}

}
puts { hello }
puts { 
  hello
}
echo "hello"
# hello 
quit -sim
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# 0000000000000000
# PC Reset To Correct Value 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# xxxxxxxxxxxxxxxx
# PC Not Reset Correctly: xxxxxxxxxxxxxxxx 
vsim -quit
# ** Error: (vish-3296) Unknown option '-quit'.
# Use the -help option for complete vsim usage.
# Error loading design
quit -sim
help change
# The change command modifies the value of a VHDL constant, generic, or variable; Verilog register or variable; or C variable if running C Debug.
# Usage: change <variable> <value>
vsim -noopt lc3_datapath
# ** Error: (vish-3296) Unknown option '-noopt'.
# Use the -help option for complete vsim usage.
# Error loading design
vsim -novopt lc3_datapath
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
change PC 16'hffff
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# ** Error: can't read "clkperiod": no such variable
# Error in macro ./testDatapath.do line 41
# can't read "clkperiod": no such variable
#     while executing
# "expr "$numOfCycles * $clkperiod" "
#     (procedure "runClk" line 2)
#     invoked from within
# "runClk 20 "
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# ** Error: can't read "clkperiod": no such variable
# Error in macro ./testDatapath.do line 41
# can't read "clkperiod": no such variable
#     while executing
# "expr "$numOfCycles * $clkperiod" "
#     (procedure "runClk" line 2)
#     invoked from within
# "runClk 20 "
do testDatapath.do
# 20 
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# ** Error: can't read "clkperiod": no such variable
# Error in macro ./testDatapath.do line 41
# can't read "clkperiod": no such variable
#     while executing
# "expr "$numOfCycles * $clkperiod" "
#     (procedure "runClk" line 2)
#     invoked from within
# "runClk 20 "
do testDatapath.do
# 20 
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# ** Error: can't read "clkperiod": no such variable
# Error in macro ./testDatapath.do line 41
# can't read "clkperiod": no such variable
#     while executing
# "expr "$numOfCycles * $clkperiod" "
#     (procedure "runClk" line 2)
#     invoked from within
# "runClk 20 "
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# ** Error: can't read "CLKPERIOD": no such variable
# Error in macro ./testDatapath.do line 41
# can't read "CLKPERIOD": no such variable
#     while executing
# "expr "$numOfCycles * $CLKPERIOD" "
#     (procedure "runClk" line 3)
#     invoked from within
# "runClk 10 "
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# Found Bug: PC is not 16'h0000 
# Testing Register: PC 
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# Error in macro ./testDatapath.do line 51
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# 
#     while executing
# "change $we 1'b0 "
#     (procedure "testRegister" line 9)
#     invoked from within
# "testRegister "PC" "PCMUX" "ldPC" "
change ldPC 1
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# Found Bug: PC is not 16'h0000: Current Value 0000000000000000 
# Testing Register: PC 
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# Error in macro ./testDatapath.do line 51
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# 
#     while executing
# "change $we 1'b0 "
#     (procedure "testRegister" line 9)
#     invoked from within
# "testRegister "PC" "PCMUX" "ldPC" "
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# ** Error: bad option "-radix hex PC": must be -ascii, -binary, -context, -decimal, -default, -delta, -depth, -describe, -elemtype, -env, -expr, -gui, -handle, -hexadecimal, -idx, -in, -inout, -internal, -kernel, -maxlen, -maxfieldlen, -messages, -name, -noformat, -octal, -out, -ports, -quiet, -r, -radix, -recursive, -showbase, -signed, -snapdistance, -symbolic, -time, -tree, -type, -unsigned, -value, -radixenumsymbolic, or -radixenumnumeric
# Error in macro ./testDatapath.do line 49
# bad option "-radix hex PC": must be -ascii, -binary, -context, -decimal, -default, -delta, -depth, -describe, -elemtype, -env, -expr, -gui, -handle, -hexadecimal, -idx, -in, -inout, -internal, -kernel, -maxlen, -maxfieldlen, -messages, -name, -noformat, -octal, -out, -ports, -quiet, -r, -radix, -recursive, -showbase, -signed, -snapdistance, -symbolic, -time, -tree, -type, -unsigned, -value, -radixenumsymbolic, or -radixenumnumeric
#     while executing
# "examine "-radix hex $signal""
#     (procedure "checkValue" line 2)
#     invoked from within
# "checkValue "PC" 16'h0000 "
examine -radix hex PC
# 0000
examine -radix hex PC
# 0000
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# Found Bug: PC is not 16'h0000: Current Value 0000 
# Testing Register: PC 
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# Error in macro ./testDatapath.do line 51
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# 
#     while executing
# "change $we 1'b0 "
#     (procedure "testRegister" line 9)
#     invoked from within
# "testRegister "PC" "PCMUX" "ldPC" "
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# Found Bug: PC is not 16'h0000: Current Value 0000 
# Testing Register: PC 
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# Error in macro ./testDatapath.do line 51
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# 
#     while executing
# "change $we 1'b0 "
#     (procedure "testRegister" line 9)
#     invoked from within
# "testRegister "PC" "PCMUX" "ldPC" "
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# PC has expected value (0000) 
# Testing Register: PC 
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# Error in macro ./testDatapath.do line 51
# ** Error: (vsim-3661) Unable to change 'ldPC': Use the force command to change nets.
# 
#     while executing
# "change $we 1'b0 "
#     (procedure "testRegister" line 9)
#     invoked from within
# "testRegister "PC" "PCMUX" "ldPC" "
force -drive sim:/lc3_datapath/ldPC 1 0
force -drive sim:/lc3_datapath/ldPC 1 0
run 10 ns
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# PC has expected value (0000) 
# Testing Register: PC 
# Found Bug: PC is not 16'h0000: Current Value 0000 
# Found Bug: PC is not 16'hffff: Current Value 03e6 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# PC has expected value (0000) 
# Testing Register: PC 
# PC has expected value (0000) 
# Found Bug: PC is not ffff: Current Value 03e6 
add wave -position insertpoint  \
sim:/lc3_datapath/PC
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# PC has expected value (0000) 
# Testing Register: PC 
# PC has expected value (0000) 
# Found Bug: PC is not ffff: Current Value 03e6 
run 20
run 20
[expr "1 * 20" ]
# invalid command name "20"
echo [expr "2 * 20"]
# 40 
echo [expr "2 * 20"]ns
# 40ns 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# PC has expected value (0000) 
# Testing Register: PC 
# PC has expected value (0000) 
# Found Bug: PC is not ffff: Current Value 03e6 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# PC has expected value (0000) 
# Testing Register: PC 
# PC has expected value (0000) 
# PC has expected value (ffff) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
# tPC has expected value (0000) 
# Testing Register: PC 
# tPC has expected value (0000) 
# tPC has expected value (ffff) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (ffff) 
add wave -position insertpoint  \
sim:/lc3_datapath/selPC
help add wave
# The add wave command adds the following objects to the Wave window:  VHDL signals and variables, Verilog nets and registers, and SystemC primitive channels (signals).
# Usage: add wave [-allowconstants] [-clampanalog [0|1]] [-color <standard_color_name>] [-depth <level>] [-divider <divider_name>...] [-expand <signal_name>] [-<format>] [-group <group_name> [<sig_name1>...]] [-height <pixels>] [[-in] [-out] [-inout] | [-ports]] [-internal] [-label <name>] [-max <real_num>] [-min <real_num>] [-mvcall] [-mvcovm] [-mvcreccomplete] [-noupdate] [-optcells] [-position] [-radix <type> | <radix_type>] [-radixenumnumeric | -radixenumsymbolic] [-recursive] [-time] [-window <wname>] [<object_name>...] [{<object_name> {sig1 sig2 sig3 ...}}] 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (ffff) 
# Testing Register: MAR 
# ** Error: (vsim-3661) Unable to change 'BUSS': Use the force command to change nets.
# Error in macro ./testDatapath.do line 73
# ** Error: (vsim-3661) Unable to change 'BUSS': Use the force command to change nets.
# 
#     while executing
# "change $regInput 16'hffff"
#     (procedure "testRegister" line 7)
#     invoked from within
# "testRegister "MAR" "BUSS" "ldMAR""
force -drive BUSS 16#ABCD
run 20 ns
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
# ** Error: (vsim-3458) Cannot use the 'force -drive' command on a register.
# Error in macro ./testDatapath.do line 62
# ** Error: (vsim-3458) Cannot use the 'force -drive' command on a register.
# 
#     while executing
# "force -drive $reg 16#0000"
#     (procedure "testRegister" line 5)
#     invoked from within
# "testRegister "PC" "PCMUX" "ldPC" "
help 
# Type help <command> to get information on that command, or try one of the following:
#   commands  List all available commands and topics.
#   Debugging Lists debugging commands.
#   Execution Information on controlling execution of the simulation.
#   Tcl       Information on Tcl commands.
#   Tk        Information on Tk commands.
#   incrTcl   Information on incrTcl commands.
# 
help commands
# Help avaliable on the following topics and commands:
# 	abort	add	add_cmdhelp	add_menu
# 	add_menucb	add_menuitem	add_menurb	add_separator
# 	add_submenu	addTime	after	alias
# 	append	apply_button_adder	array	batch_mode
# 	bd	bedit	bell	bgerror	binary
# 	bind	bindtags	body	bp	break
# 	button	call	canvas	catch	cd
# 	cdbg	change	change_menu_cmd	check
# 	checkbutton	checkpoint	class	clipboard
# 	clock	close	code	concat	config
# 	configure	cont	context	continue	dde
# 	Debugging	debugging	delete	describe	destroy
# 	disable_menu	disable_menuitem	disablebp
# 	divTime	do	down	drivers	dumplog64
# 	echo	edit	elite_edition	enable_menu
# 	enable_menuitem	enablebp	encoding	ensemble
# 	entry	env	environment	environment_nosource
# 	eof	eqTime	error	eval	event
# 	exa	examine	exec	execution	exit
# 	expr	fblocked	fconfigure	fcopy	file
# 	fileevent	find	findExec	flush	focus
# 	font	for	force	foreach	format
# 	formatTime	frame	get_menu_path	getactivecursortime
# 	getactivemarkertime	gets	ginfo	glob
# 	global	grab	grid	gteTime	gtTime
# 	help	history	http	if	image
# 	incr	incrTcl	info	int64ToReal
# 	int64ToStr	interp	intToTime	jobspy	join
# 	label	lappend	layout	lecho	left
# 	lindex	linsert	list	listbox	llength
# 	load	local	log	lower	lrange
# 	lremove	lreplace	lsearch	lset	lshift
# 	lsort	lsublist	lteTime	ltTime	luniq
# 	max	menu	menubutton	message	msgcat
# 	mulTime	namespace	namespaceOf	neqTime
# 	next	noforce	nolog	notepad	notrace
# 	noview	nowhen	onbreak	onElabError
# 	onerror	onfinish	open	openlog	option
# 	pack	package	panedwindow	parray
# 	pathOf	pause	pedit	personal_edition
# 	pid	place	pop	precision	PrefSource
# 	PrefSource(geometry)	PrefSource(HDLFileTypes)	PrefSource(HighlightErrorColor)
# 	PrefSource(highlightExecutableLines)	PrefSource(tabs)	PrefSource(user_hook)
# 	PrefSource(verilogFileTypes)	PrefSource(vhdlFileTypes)	PrefSource(WarnSourceChanged)
# 	printenv	proc	project	property	push
# 	puterr	puts	pwd	qhdel	qhdir
# 	qhlib	questasim	quietly	quit	qverilog
# 	qvhcom	qvlcom	radiobutton	radix
# 	raise	read	readers	RealToTime	regexp
# 	registry	regsub	rename	renamelog	report
# 	restart	restore	resume	return	right
# 	rincr	run	runStatus	sbrk	scale
# 	scaleTime	scan	sccom	scgenmod	scope
# 	scrollbar	sdfcom	search	searchlog	see
# 	seek	seetime	selection	send	set
# 	setenv	shift	Show	show	simNamespaceIsOpen
# 	simstats	simtime	slave_mode	socket	source
# 	spinbox	split	status	step	stop
# 	string	subst	subTime	suppress	switch
# 	tabset	tb	tcheck_set	tcheck_status
# 	Tcl	tcl_endOfWord	tcl_findLibrary
# 	tcl_startOfNextWord	tcl_startOfPreviousWord	tcl_wordBreakAfter
# 	tcl_wordBreakBefore	tell	text	time
# 	tix	Tk	tk	tk_chooseColor
# 	tk_chooseDirectory	tk_dialog	tk_getOpenFile
# 	tk_getSaveFile	tk_menuSetFocus	tk_messageBox
# 	tk_popup	tk_textCopy	tk_textCut	tk_textPaste
# 	tkwait	toggle	toplevel	trace	transcribe
# 	transcript	truncate	tssi2mti	typespec	ui_VVMode
# 	unknown	unset	unsetenv	up	update
# 	uplevel	upvar	usual	validTime	variable
# 	vcd	vcd2wlf	vcom	vdbg	vdel
# 	vdir	vencrypt	verror	vgencomp	vhencrypt
# 	view	virtual	vlib	vlog	vmake
# 	vmap	vopt	vsim	vsim_break	vsimAuth
# 	vsimDate	vsimId	vsimVersion	vsimVersionString
# 	vsource	vwait	when	where	while
# 	winfo	wlf2log	wlf2vcd	wlfman	wlfrecover
# 	wm	write	xml2ucdb
# 
help typespec
# The typespec command queries class names and class relationships of SystemVerilog classes.
# Usage: typespec [-isa <value>] [-class <value> | -ancestry <value>] [-exact] [-regexp] [-indent <value>] <pattern>
typespec BUSS
help check
# Partial command name. Choices are: check contention, check contention add, check contention config, check contention off, check float, check float add, check float config, check float off, check stable, check stable off, check stable on
# Usage: check contention|float|stable
help write
# Partial command name. Choices are: write cell_report, write format, write list, write preferences, write report, write timing, write transcript, write tssi, write wave
# Usage: write cell_report|format|list|preferences|report|transcript|tssi|wave
force -drive sim:/lc3_datapath/PC 16#DEED 0
# ** Error: (vsim-3458) Cannot use the 'force -drive' command on a register.
# 
force -freeze sim:/lc3_datapath/PC 0000000000000000 0
force -freeze sim:/lc3_datapath/ldIR St1 0
[expr "pow(2,16) -1"]
# invalid command name "65535.0"
echo [expr "int(pow(2,16) -1)"]
# 65535 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# ** Error: wrong # args: should be "testRegister reg regInput we bitwidth"
# Error in macro ./testDatapath.do line 62
# wrong # args: should be "testRegister reg regInput we bitwidth"
#     while executing
# "testRegister "PC" "PCMUX" "ldPC" "
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
# ** Error: wrong # args: should be "checkValue signal radix expectedValue"
# Error in macro ./testDatapath.do line 62
# wrong # args: should be "checkValue signal radix expectedValue"
#     while executing
# "checkValue $reg 0000"
#     (procedure "testRegister" line 16)
#     invoked from within
# "testRegister "PC" "PCMUX" "ldPC" 16"
help examine
# The examine command examines one or more objects and displays current values (or the values at a specified previous time) in the Transcript pane. It optionally can compute the value of an expression of one or more objects. If you are using C Debug , examine can display the value of a C variable as well.
# Usage: examine [-delta <delta>] [-env <path>] [-event <time>] [-handle] {[-in] [-out] [-inout] | [-ports]} [-internal] [-maxlen <integer>] [-expr <expression>] [-name] [-radix_type] [-radix <type>] [-radixenumnumeric | -radixenumsymbolic] [-showbase] [-time <time>] [-value] <name>...
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     Found Bug: PC is not ALLONES: Current Value -1 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     Found Bug: MAR is not ALLONES: Current Value 0 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     Found Bug: MDR is not ALLONES: Current Value 0 
# Testing Register: IR 
#     IR has expected value (0000) 
#     Found Bug: IR is not ALLONES: Current Value 0 
# ** Error: invalid command name "0"
# Error in macro ./testDatapath.do line 106
# invalid command name "0"
#     while executing
# "0"
#     invoked from within
# "testRegister "REGFILE[0]" "BUSS" "regWE" 16"
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     Found Bug: PC is not 65535: Current Value -1 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     Found Bug: MAR is not 65535: Current Value 0 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     Found Bug: MDR is not 65535: Current Value 0 
# Testing Register: IR 
#     IR has expected value (0000) 
#     Found Bug: IR is not 65535: Current Value 0 
# ** Error: invalid command name "0"
# Error in macro ./testDatapath.do line 106
# invalid command name "0"
#     while executing
# "0"
#     invoked from within
# "testRegister "REGFILE[0]" "BUSS" "regWE" 16"
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
# ** Error: Invalid decimal digit: -.
# ** Error: (vsim-4011) Invalid force value: 10#-1.
# Error in macro ./testDatapath.do line 62
# Invalid decimal digit: -.
# ** Error: (vsim-4011) Invalid force value: 10#-1.
# 
#     while executing
# "force -freeze $regInput 10#-1"
#     (procedure "testRegister" line 8)
#     invoked from within
# "testRegister "PC" "PCMUX" "ldPC" 16"
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     Found Bug: MAR is not 65535: Current Value 0 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     Found Bug: MDR is not 65535: Current Value 0 
# Testing Register: IR 
#     IR has expected value (0000) 
#     Found Bug: IR is not 65535: Current Value 0 
# ** Error: invalid command name "0"
# Error in macro ./testDatapath.do line 106
# invalid command name "0"
#     while executing
# "0"
#     invoked from within
# "testRegister "REGFILE[0]" "BUSS" "regWE" 16"
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     Found Bug: MAR is not 65535: Current Value 0 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     Found Bug: MDR is not 65535: Current Value 0 
# Testing Register: IR 
#     IR has expected value (0000) 
#     Found Bug: IR is not 65535: Current Value 0 
# ** Error: invalid command name "0"
# Error in macro ./testDatapath.do line 106
# invalid command name "0"
#     while executing
# "0"
#     invoked from within
# "testRegister "REGFILE[0]" "BUSS" "regWE" 16"
# Warning: Unable to determine driver(s) for "sim:/lc3_datapath/MAR"
quit -sim
# Compile of lc3_datapath.v failed with 1 errors.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     Found Bug: MDR is not 65535: Current Value z 
# Testing Register: IR 
#     IR has expected value (0000) 
#     Found Bug: IR is not 65535: Current Value 0 
# ** Error: invalid command name "0"
# Error in macro ./testDatapath.do line 106
# invalid command name "0"
#     while executing
# "0"
#     invoked from within
# "testRegister "REGFILE[0]" "BUSS" "regWE" 16"
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     Found Bug: IR is not 65535: Current Value 0 
# ** Error: invalid command name "0"
# Error in macro ./testDatapath.do line 106
# invalid command name "0"
#     while executing
# "0"
#     invoked from within
# "testRegister "REGFILE[0]" "BUSS" "regWE" 16"
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     Found Bug: IR is not 65535: Current Value 0 
# ** Error: invalid command name "0"
# Error in macro ./testDatapath.do line 106
# invalid command name "0"
#     while executing
# "0"
#     invoked from within
# "testRegister "REGFILE[0]" "BUSS" "regWE" 16"
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# ** Error: invalid command name "0"
# Error in macro ./testDatapath.do line 106
# invalid command name "0"
#     while executing
# "0"
#     invoked from within
# "testRegister "REGFILE[0]" "BUSS" "regWE" 16"
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     Found Bug: REGFILE[1] is not 65535: Current Value 0 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     Found Bug: REGFILE[2] is not 65535: Current Value 0 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     Found Bug: REGFILE[3] is not 65535: Current Value 0 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     Found Bug: REGFILE[4] is not 65535: Current Value 0 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     Found Bug: REGFILE[5] is not 65535: Current Value 0 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     Found Bug: REGFILE[6] is not 65535: Current Value 0 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     Found Bug: REGFILE[7] is not 65535: Current Value 0 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     Found Bug: MEMORY[0] is not 65535: Current Value 0 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     Found Bug: MEMORY[1] is not 65535: Current Value 0 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     Found Bug: MEMORY[2] is not 65535: Current Value 0 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     Found Bug: MEMORY[3] is not 65535: Current Value 0 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     Found Bug: MEMORY[4] is not 65535: Current Value 0 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     Found Bug: MEMORY[5] is not 65535: Current Value 0 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     Found Bug: MEMORY[6] is not 65535: Current Value 0 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     Found Bug: MEMORY[7] is not 65535: Current Value 0 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
do testDatapath.do
# ** Error: wrong # args: should be "proc name args body"
# Error in macro ./testDatapath.do line 4
# wrong # args: should be "proc name args body"
#     while executing
# "proc getAllOnesDecimal{ bitwidth } {
#   return [expr "int(pow(2,$bitwidth)-1)"]
# }"
#     (file "testLib.do" line 15)
#     invoked from within
# "source testLib.do"
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# ** Error: wrong # args: should be "set varName ?newValue?"
# Error in macro ./testDatapath.do line 63
# wrong # args: should be "set varName ?newValue?"
#     while compiling
# "set ALLONES getAllOnesDecimal $bitwidth"
#     (compiling body of proc "testRegister", line 7)
#     invoked from within
# "testRegister "PC" "PCMUX" "ldPC" 16"
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     Found Bug: MARMUX is not 10#65535: Current Value -1 
#   Testing Input 0: ZEXT  
#     Found Bug: MARMUX is not 10#65535: Current Value -1 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 0: ZEXT  
#     MARMUX has expected value (65535) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 0: ZEXT  
#     MARMUX has expected value (65535) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     Found Bug: MARMUX is not 65535: Current Value 0 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v failed with 1 errors.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     Found Bug: PCMUX is not 65535: Current Value 0 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     Found Bug: ADDR2MUX is not 65535: Current Value 0 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# ** Error: invalid command name "5"
# Error in macro ./testDatapath.do line 181
# invalid command name "5"
#     while executing
# "add wave -radix hex SR2MUX"
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     Found Bug: PCMUX is not 65535: Current Value 0 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     Found Bug: ADDR2MUX is not 65535: Current Value 0 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# ** Error: invalid command name "5"
# Error in macro ./testDatapath.do line 182
# invalid command name "5"
#     while executing
# "add wave -radix hex SR2MUX"
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     Found Bug: PCMUX is not 65535: Current Value 0 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     Found Bug: ADDR2MUX is not 65535: Current Value 0 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# ** Error: invalid command name "5"
# Error in macro ./testDatapath.do line 182
# invalid command name "5"
#     while executing
# "add wave -radix hex SR2MUX"
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     Found Bug: ADDR2MUX is not 65535: Current Value 0 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# ** Error: invalid command name "5"
# Error in macro ./testDatapath.do line 182
# invalid command name "5"
#     while executing
# "add wave -radix hex SR2MUX"
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# ** Error: invalid command name "5"
# Error in macro ./testDatapath.do line 182
# invalid command name "5"
#     while executing
# "add wave -radix hex SR2MUX"
add wave -radix hex SR2MUX
add wave -radix hex IR[5]
# invalid command name "5"
add wave -radix hex IR\[5\]
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     Found Bug: SR2MUX is not 65535: Current Value 0 
#   Testing Input 1: SEXT4  
#     Found Bug: SR2MUX is not 65535: Current Value 0 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     Found Bug: SR2MUX is not 65535: Current Value 0 
#   Testing Input 1: SEXT4  
#     Found Bug: SR2MUX is not 65535: Current Value 0 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     Found Bug: SR2MUX is not 65535: Current Value 0 
#   Testing Input 1: SEXT4  
#     Found Bug: SR2MUX is not 65535: Current Value 0 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Compile of lc3_datapath.v failed with 1 errors.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
#     Found Bug: SEXT4 is not FFF0: Current Value 0000 
#     Found Bug: SEXT5 is not 0010: Current Value 0000 
#     Found Bug: SEXT8 is not 0010: Current Value 0000 
#     Found Bug: SEXT10 is not 0010: Current Value 0000 
#     Found Bug: ZEXT is not 0010: Current Value 0000 
# Test IR Bit 5 
#     SEXT4 has expected value (0000) 
#     Found Bug: SEXT5 is not FFE0: Current Value 0000 
#     Found Bug: SEXT8 is not 0020: Current Value 0000 
#     Found Bug: SEXT10 is not 0020: Current Value 0000 
#     Found Bug: ZEXT is not 0020: Current Value 0000 
# Test IR Bit 8 
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     Found Bug: SEXT8 is not FF00: Current Value 0000 
#     Found Bug: SEXT10 is not 0100: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     Found Bug: SEXT10 is not FC00: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
#     Found Bug: SEXT4 is not FFFF: Current Value 0000 
#     Found Bug: SEXT5 is not FFFF: Current Value 0000 
#     Found Bug: SEXT8 is not 00FF: Current Value 0000 
#     Found Bug: SEXT10 is not 00FF: Current Value 0000 
#     Found Bug: ZEXT is not 00FF: Current Value 0000 
help commands
# Help avaliable on the following topics and commands:
# 	abort	add	add_cmdhelp	add_menu
# 	add_menucb	add_menuitem	add_menurb	add_separator
# 	add_submenu	addTime	after	alias
# 	append	apply_button_adder	array	batch_mode
# 	bd	bedit	bell	bgerror	binary
# 	bind	bindtags	body	bp	break
# 	button	call	canvas	catch	cd
# 	cdbg	change	change_menu_cmd	check
# 	checkbutton	checkpoint	class	clipboard
# 	clock	close	code	concat	config
# 	configure	cont	context	continue	dde
# 	Debugging	debugging	delete	describe	destroy
# 	disable_menu	disable_menuitem	disablebp
# 	divTime	do	down	drivers	dumplog64
# 	echo	edit	elite_edition	enable_menu
# 	enable_menuitem	enablebp	encoding	ensemble
# 	entry	env	environment	environment_nosource
# 	eof	eqTime	error	eval	event
# 	exa	examine	exec	execution	exit
# 	expr	fblocked	fconfigure	fcopy	file
# 	fileevent	find	findExec	flush	focus
# 	font	for	force	foreach	format
# 	formatTime	frame	get_menu_path	getactivecursortime
# 	getactivemarkertime	gets	ginfo	glob
# 	global	grab	grid	gteTime	gtTime
# 	help	history	http	if	image
# 	incr	incrTcl	info	int64ToReal
# 	int64ToStr	interp	intToTime	jobspy	join
# 	label	lappend	layout	lecho	left
# 	lindex	linsert	list	listbox	llength
# 	load	local	log	lower	lrange
# 	lremove	lreplace	lsearch	lset	lshift
# 	lsort	lsublist	lteTime	ltTime	luniq
# 	max	menu	menubutton	message	msgcat
# 	mulTime	namespace	namespaceOf	neqTime
# 	next	noforce	nolog	notepad	notrace
# 	noview	nowhen	onbreak	onElabError
# 	onerror	onfinish	open	openlog	option
# 	pack	package	panedwindow	parray
# 	pathOf	pause	pedit	personal_edition
# 	pid	place	pop	precision	PrefSource
# 	PrefSource(geometry)	PrefSource(HDLFileTypes)	PrefSource(HighlightErrorColor)
# 	PrefSource(highlightExecutableLines)	PrefSource(tabs)	PrefSource(user_hook)
# 	PrefSource(verilogFileTypes)	PrefSource(vhdlFileTypes)	PrefSource(WarnSourceChanged)
# 	printenv	proc	project	property	push
# 	puterr	puts	pwd	qhdel	qhdir
# 	qhlib	questasim	quietly	quit	qverilog
# 	qvhcom	qvlcom	radiobutton	radix
# 	raise	read	readers	RealToTime	regexp
# 	registry	regsub	rename	renamelog	report
# 	restart	restore	resume	return	right
# 	rincr	run	runStatus	sbrk	scale
# 	scaleTime	scan	sccom	scgenmod	scope
# 	scrollbar	sdfcom	search	searchlog	see
# 	seek	seetime	selection	send	set
# 	setenv	shift	Show	show	simNamespaceIsOpen
# 	simstats	simtime	slave_mode	socket	source
# 	spinbox	split	status	step	stop
# 	string	subst	subTime	suppress	switch
# 	tabset	tb	tcheck_set	tcheck_status
# 	Tcl	tcl_endOfWord	tcl_findLibrary
# 	tcl_startOfNextWord	tcl_startOfPreviousWord	tcl_wordBreakAfter
# 	tcl_wordBreakBefore	tell	text	time
# 	tix	Tk	tk	tk_chooseColor
# 	tk_chooseDirectory	tk_dialog	tk_getOpenFile
# 	tk_getSaveFile	tk_menuSetFocus	tk_messageBox
# 	tk_popup	tk_textCopy	tk_textCut	tk_textPaste
# 	tkwait	toggle	toplevel	trace	transcribe
# 	transcript	truncate	tssi2mti	typespec	ui_VVMode
# 	unknown	unset	unsetenv	up	update
# 	uplevel	upvar	usual	validTime	variable
# 	vcd	vcd2wlf	vcom	vdbg	vdel
# 	vdir	vencrypt	verror	vgencomp	vhencrypt
# 	view	virtual	vlib	vlog	vmake
# 	vmap	vopt	vsim	vsim_break	vsimAuth
# 	vsimDate	vsimId	vsimVersion	vsimVersionString
# 	vsource	vwait	when	where	while
# 	winfo	wlf2log	wlf2vcd	wlfman	wlfrecover
# 	wm	write	xml2ucdb
# 
timestamp
# invalid command name "timestamp"
help simtime
# Returns a list of information about the current simulation state:  now delta context total-performance-samples.
# Usage: simtime 
simtime
# {2,460,150 ps} {0       } /lc3_datapath 0 0
simtime
# {2,460,150 ps} {0       } /lc3_datapath 0 0
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFF0: Current Value 0000 
#     Found Bug: SEXT5 is not 0010: Current Value 0000 
#     Found Bug: SEXT8 is not 0010: Current Value 0000 
#     Found Bug: SEXT10 is not 0010: Current Value 0000 
#     Found Bug: ZEXT is not 0010: Current Value 0000 
# Test IR Bit 5 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     Found Bug: SEXT5 is not FFE0: Current Value 0000 
#     Found Bug: SEXT8 is not 0020: Current Value 0000 
#     Found Bug: SEXT10 is not 0020: Current Value 0000 
#     Found Bug: ZEXT is not 0020: Current Value 0000 
# Test IR Bit 8 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     Found Bug: SEXT8 is not FF00: Current Value 0000 
#     Found Bug: SEXT10 is not 0100: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     Found Bug: SEXT10 is not FC00: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFFF: Current Value 0000 
#     Found Bug: SEXT5 is not FFFF: Current Value 0000 
#     Found Bug: SEXT8 is not 00FF: Current Value 0000 
#     Found Bug: SEXT10 is not 00FF: Current Value 0000 
#     Found Bug: ZEXT is not 00FF: Current Value 0000 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFF0: Current Value 0000 
#     Found Bug: SEXT5 is not 0010: Current Value 0000 
#     Found Bug: SEXT8 is not 0010: Current Value 0000 
#     Found Bug: SEXT10 is not 0010: Current Value 0000 
#     Found Bug: ZEXT is not 0010: Current Value 0000 
# Test IR Bit 5 
# 2,500,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     Found Bug: SEXT5 is not FFE0: Current Value 0000 
#     Found Bug: SEXT8 is not 0020: Current Value 0000 
#     Found Bug: SEXT10 is not 0020: Current Value 0000 
#     Found Bug: ZEXT is not 0020: Current Value 0000 
# Test IR Bit 8 
# 2,520,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     Found Bug: SEXT8 is not FF00: Current Value 0000 
#     Found Bug: SEXT10 is not 0100: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     Found Bug: SEXT10 is not FC00: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFFF: Current Value 0000 
#     Found Bug: SEXT5 is not FFFF: Current Value 0000 
#     Found Bug: SEXT8 is not 00FF: Current Value 0000 
#     Found Bug: SEXT10 is not 00FF: Current Value 0000 
#     Found Bug: ZEXT is not 00FF: Current Value 0000 
# Compile of lc3_datapath.v failed with 1 errors.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v failed with 1 errors.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFF0: Current Value 0000 
#     Found Bug: SEXT5 is not 0010: Current Value 0000 
#     Found Bug: SEXT8 is not 0010: Current Value 0000 
#     Found Bug: SEXT10 is not 0010: Current Value 0000 
#     Found Bug: ZEXT is not 0010: Current Value 0000 
# Test IR Bit 5 
# 2,500,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     Found Bug: SEXT5 is not FFE0: Current Value 0000 
#     Found Bug: SEXT8 is not 0020: Current Value 0000 
#     Found Bug: SEXT10 is not 0020: Current Value 0000 
#     Found Bug: ZEXT is not 0020: Current Value 0000 
# Test IR Bit 8 
# 2,520,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     Found Bug: SEXT8 is not FF00: Current Value 0000 
#     Found Bug: SEXT10 is not 0100: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     Found Bug: SEXT10 is not FC00: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFFF: Current Value 0000 
#     Found Bug: SEXT5 is not FFFF: Current Value 0000 
#     Found Bug: SEXT8 is not 00FF: Current Value 0000 
#     Found Bug: SEXT10 is not 00FF: Current Value 0000 
#     Found Bug: ZEXT is not 00FF: Current Value 0000 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFF0: Current Value 0000 
#     Found Bug: SEXT5 is not 0010: Current Value 0000 
#     Found Bug: SEXT8 is not 0010: Current Value 0000 
#     Found Bug: SEXT10 is not 0010: Current Value 0000 
#     Found Bug: ZEXT is not 0010: Current Value 0000 
# Test IR Bit 5 
# 2,500,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     Found Bug: SEXT5 is not FFE0: Current Value 0000 
#     Found Bug: SEXT8 is not 0020: Current Value 0000 
#     Found Bug: SEXT10 is not 0020: Current Value 0000 
#     Found Bug: ZEXT is not 0020: Current Value 0000 
# Test IR Bit 8 
# 2,520,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     Found Bug: SEXT8 is not FF00: Current Value 0000 
#     Found Bug: SEXT10 is not 0100: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     Found Bug: SEXT10 is not FC00: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFFF: Current Value 0000 
#     Found Bug: SEXT5 is not FFFF: Current Value 0000 
#     Found Bug: SEXT8 is not 00FF: Current Value 0000 
#     Found Bug: SEXT10 is not 00FF: Current Value 0000 
#     Found Bug: ZEXT is not 00FF: Current Value 0000 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFF0: Current Value 0000 
#     Found Bug: SEXT5 is not 0010: Current Value 0000 
#     Found Bug: SEXT8 is not 0010: Current Value 0000 
#     Found Bug: SEXT10 is not 0010: Current Value 0000 
#     Found Bug: ZEXT is not 0010: Current Value 0000 
# Test IR Bit 5 
# 2,500,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     Found Bug: SEXT5 is not FFE0: Current Value 0000 
#     Found Bug: SEXT8 is not 0020: Current Value 0000 
#     Found Bug: SEXT10 is not 0020: Current Value 0000 
#     Found Bug: ZEXT is not 0020: Current Value 0000 
# Test IR Bit 8 
# 2,520,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     Found Bug: SEXT8 is not FF00: Current Value 0000 
#     Found Bug: SEXT10 is not 0100: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     Found Bug: SEXT10 is not FC00: Current Value 0000 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFFF: Current Value 0000 
#     Found Bug: SEXT5 is not FFFF: Current Value 0000 
#     Found Bug: SEXT8 is not 00FF: Current Value 0000 
#     Found Bug: SEXT10 is not 00FF: Current Value 0000 
#     Found Bug: ZEXT is not 00FF: Current Value 0000 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFF0: Current Value 0000 
#     Found Bug: SEXT5 is not 0010: Current Value 0000 
#     Found Bug: SEXT8 is not 0010: Current Value 0000 
#     Found Bug: SEXT10 is not 0010: Current Value 0000 
#     Found Bug: ZEXT is not 0010: Current Value 0000 
# Test IR Bit 5 
# 2,500,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not 0000: Current Value 0010 
#     Found Bug: SEXT5 is not FFE0: Current Value 0010 
#     Found Bug: SEXT8 is not 0020: Current Value 0010 
#     Found Bug: SEXT10 is not 0020: Current Value 0010 
#     Found Bug: ZEXT is not 0020: Current Value 0010 
# Test IR Bit 8 
# 2,520,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not 0000: Current Value 0020 
#     Found Bug: SEXT5 is not 0000: Current Value ffe0 
#     Found Bug: SEXT8 is not FF00: Current Value 0020 
#     Found Bug: SEXT10 is not 0100: Current Value 0020 
#     Found Bug: ZEXT is not 0000: Current Value 0020 
# Test IR Bit 10 
# 2,540,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not 0000: Current Value 0100 
#     SEXT5 has expected value (0000) 
#     Found Bug: SEXT8 is not 0000: Current Value ff00 
#     Found Bug: SEXT10 is not FC00: Current Value 0100 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFFF: Current Value 0400 
#     Found Bug: SEXT5 is not FFFF: Current Value 0000 
#     Found Bug: SEXT8 is not 00FF: Current Value 0000 
#     Found Bug: SEXT10 is not 00FF: Current Value fc00 
#     Found Bug: ZEXT is not 00FF: Current Value 0000 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFF0: Current Value 0000 
#     Found Bug: SEXT5 is not 0010: Current Value 0000 
#     Found Bug: SEXT8 is not 0010: Current Value 0000 
#     Found Bug: SEXT10 is not 0010: Current Value 0000 
#     Found Bug: ZEXT is not 0010: Current Value 0000 
# Test IR Bit 5 
# 2,500,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not 0000: Current Value 0010 
#     Found Bug: SEXT5 is not FFE0: Current Value 0010 
#     Found Bug: SEXT8 is not 0020: Current Value 0010 
#     Found Bug: SEXT10 is not 0020: Current Value 0010 
#     Found Bug: ZEXT is not 0020: Current Value 0010 
# Test IR Bit 8 
# 2,520,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not 0000: Current Value 0020 
#     Found Bug: SEXT5 is not 0000: Current Value ffe0 
#     Found Bug: SEXT8 is not FF00: Current Value 0020 
#     Found Bug: SEXT10 is not 0100: Current Value 0020 
#     Found Bug: ZEXT is not 0000: Current Value 0020 
# Test IR Bit 10 
# 2,540,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not 0000: Current Value 0100 
#     SEXT5 has expected value (0000) 
#     Found Bug: SEXT8 is not 0000: Current Value ff00 
#     Found Bug: SEXT10 is not FC00: Current Value 0100 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,150 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFFF: Current Value 0400 
#     Found Bug: SEXT5 is not FFFF: Current Value 0000 
#     Found Bug: SEXT8 is not 00FF: Current Value 0000 
#     Found Bug: SEXT10 is not 00FF: Current Value fc00 
#     Found Bug: ZEXT is not 00FF: Current Value 0000 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFF0: Current Value 0010 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not 0000: Current Value 0020 
#     Found Bug: SEXT5 is not FFE0: Current Value ffe0 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not 0000: Current Value 0100 
#     SEXT5 has expected value (0000) 
#     Found Bug: SEXT8 is not FF00: Current Value ff00 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not 0000: Current Value 0400 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     Found Bug: SEXT10 is not FC00: Current Value fc00 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFFF: Current Value 00ff 
#     Found Bug: SEXT5 is not FFFF: Current Value ffff 
#     Found Bug: SEXT8 is not 00FF: Current Value 00ff 
#     Found Bug: SEXT10 is not 00FF: Current Value 00ff 
#     Found Bug: ZEXT is not 00FF: Current Value 00ff 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# 3 compiles, 0 failed with no errors. 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFF0: Current Value fff0 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     Found Bug: SEXT5 is not FFE0: Current Value ffe0 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     Found Bug: SEXT8 is not FF00: Current Value ff00 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     Found Bug: SEXT10 is not FC00: Current Value fc00 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     Found Bug: SEXT4 is not FFFF: Current Value ffff 
#     Found Bug: SEXT5 is not FFFF: Current Value ffff 
#     Found Bug: SEXT8 is not 00FF: Current Value 00ff 
#     Found Bug: SEXT10 is not 00FF: Current Value 00ff 
#     Found Bug: ZEXT is not 00FF: Current Value 00ff 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
# Testing Adder 
#     Found Bug: ADDER is not 0000: Current Value 00fe 
#     Found Bug: ADDER is not 0002: Current Value 00fe 
#     Found Bug: ADDER is not 32768: Current Value 254 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
# Testing Adder 
#     Found Bug: ADDER is not 0000: Current Value 00fe 
#     Found Bug: ADDER is not 0002: Current Value 00fe 
#     Found Bug: ADDER is not 32768: Current Value 254 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
# Testing Adder 
#     Found Bug: ADDER is not 0000: Current Value 00fe 
#     Found Bug: ADDER is not 0002: Current Value 00fe 
#     Found Bug: ADDER is not 32768: Current Value 254 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
# Testing Adder 
#     ADDER has expected value (0000) 
#     ADDER has expected value (0002) 
#     Found Bug: ADDER is not 32768: Current Value -32768 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
# Testing Adder 
#     ADDER has expected value (0000) 
#     ADDER has expected value (0002) 
#     ADDER has expected value (32768) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
# Testing Adder 
#     ADDER has expected value (0000) 
#     ADDER has expected value (0002) 
#     ADDER has expected value (32768) 
# Testing ALU 
# Test PASS A 
#     Found Bug: ALU is not 0000: Current Value xxxx 
#     ALU has expected value (ffff) 
# Testing ADD 
#     Found Bug: ALU is not 0002: Current Value xxxx 
# Testing AND 
#     Found Bug: ALU is not AAAA: Current Value XXXX 
# Testing NOT 
#     Found Bug: ALU is not 5555: Current Value XXXX 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
# Testing Adder 
#     ADDER has expected value (0000) 
#     ADDER has expected value (0002) 
#     ADDER has expected value (32768) 
# Testing ALU 
# Test PASS A 
#     Found Bug: ALU is not 0000: Current Value xxxx 
#     ALU has expected value (ffff) 
# Testing ADD 
#     Found Bug: ALU is not 0002: Current Value xxxx 
# Testing AND 
#     Found Bug: ALU is not AAAA: Current Value XXXX 
# Testing NOT 
#     Found Bug: ALU is not 5555: Current Value XXXX 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
# Testing Adder 
#     ADDER has expected value (0000) 
#     ADDER has expected value (0002) 
#     ADDER has expected value (32768) 
# Testing ALU 
# Test PASS A 
#     ALU has expected value (0000) 
#     ALU has expected value (ffff) 
# Testing ADD 
#     ALU has expected value (0002) 
# Testing AND 
#     Found Bug: ALU is not AAAA: Current Value aaaa 
# Testing NOT 
#     ALU has expected value (5555) 
do testDatapath.do
# vsim -novopt lc3_datapath 
# Loading work.lc3_datapath
# Ensure that PC was reset correctly 
#     PC has expected value (0000) 
# Testing Register: PC 
#     PC has expected value (0000) 
#     PC has expected value (65535) 
# Testing Register: MAR 
#     MAR has expected value (0000) 
#     MAR has expected value (65535) 
# Testing Register: MDR 
#     MDR has expected value (0000) 
#     MDR has expected value (65535) 
# Testing Register: IR 
#     IR has expected value (0000) 
#     IR has expected value (65535) 
# Testing Register: REGFILE[0] 
#     REGFILE[0] has expected value (0000) 
#     REGFILE[0] has expected value (65535) 
# Testing Register: REGFILE[1] 
#     REGFILE[1] has expected value (0000) 
#     REGFILE[1] has expected value (65535) 
# Testing Register: REGFILE[2] 
#     REGFILE[2] has expected value (0000) 
#     REGFILE[2] has expected value (65535) 
# Testing Register: REGFILE[3] 
#     REGFILE[3] has expected value (0000) 
#     REGFILE[3] has expected value (65535) 
# Testing Register: REGFILE[4] 
#     REGFILE[4] has expected value (0000) 
#     REGFILE[4] has expected value (65535) 
# Testing Register: REGFILE[5] 
#     REGFILE[5] has expected value (0000) 
#     REGFILE[5] has expected value (65535) 
# Testing Register: REGFILE[6] 
#     REGFILE[6] has expected value (0000) 
#     REGFILE[6] has expected value (65535) 
# Testing Register: REGFILE[7] 
#     REGFILE[7] has expected value (0000) 
#     REGFILE[7] has expected value (65535) 
# Testing Register: MEMORY[0] 
#     MEMORY[0] has expected value (0000) 
#     MEMORY[0] has expected value (65535) 
# Testing Register: MEMORY[1] 
#     MEMORY[1] has expected value (0000) 
#     MEMORY[1] has expected value (65535) 
# Testing Register: MEMORY[2] 
#     MEMORY[2] has expected value (0000) 
#     MEMORY[2] has expected value (65535) 
# Testing Register: MEMORY[3] 
#     MEMORY[3] has expected value (0000) 
#     MEMORY[3] has expected value (65535) 
# Testing Register: MEMORY[4] 
#     MEMORY[4] has expected value (0000) 
#     MEMORY[4] has expected value (65535) 
# Testing Register: MEMORY[5] 
#     MEMORY[5] has expected value (0000) 
#     MEMORY[5] has expected value (65535) 
# Testing Register: MEMORY[6] 
#     MEMORY[6] has expected value (0000) 
#     MEMORY[6] has expected value (65535) 
# Testing Register: MEMORY[7] 
#     MEMORY[7] has expected value (0000) 
#     MEMORY[7] has expected value (65535) 
# Testing Multiplexor: MARMUX 
#   Testing Input 0: ADDER  
#     MARMUX has expected value (65535) 
#   Testing Input 1: ZEXT  
#     MARMUX has expected value (65535) 
# Testing Multiplexor: PCMUX 
#   Testing Input 0: PCINCR  
#     PCMUX has expected value (65535) 
#   Testing Input 1: ADDER  
#     PCMUX has expected value (65535) 
#   Testing Input 2: BUSS  
#     PCMUX has expected value (65535) 
# Testing Multiplexor: ADDR1MUX 
#   Testing Input 0: PC  
#     ADDR1MUX has expected value (65535) 
#   Testing Input 1: RA  
#     ADDR1MUX has expected value (65535) 
# Testing Multiplexor: ADDR2MUX 
#   Testing Input 0: ZERO16  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 1: SEXT5  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 2: SEXT8  
#     ADDR2MUX has expected value (65535) 
#   Testing Input 3: SEXT10  
#     ADDR2MUX has expected value (65535) 
# Testing Multiplexor: SR2MUX 
#   Testing Input 0: RB  
#     SR2MUX has expected value (65535) 
#   Testing Input 1: SEXT4  
#     SR2MUX has expected value (65535) 
# Testing Multiplexor: MDRMUX 
#   Testing Input 0: BUSS  
#     MDRMUX has expected value (65535) 
#   Testing Input 1: memOut  
#     MDRMUX has expected value (65535) 
# Checking Sign Extension, Zero Extension 
# Check ZERO Extension Correct 
# 2,460,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (0000) 
#     ZEXT has expected value (0000) 
# Test IR Bit 4 
# 2,480,160 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (fff0) 
#     SEXT5 has expected value (0010) 
#     SEXT8 has expected value (0010) 
#     SEXT10 has expected value (0010) 
#     ZEXT has expected value (0010) 
# Test IR Bit 5 
# 2,500,170 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (ffe0) 
#     SEXT8 has expected value (0020) 
#     SEXT10 has expected value (0020) 
#     ZEXT has expected value (0020) 
# Test IR Bit 8 
# 2,520,180 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (ff00) 
#     SEXT10 has expected value (0100) 
#     ZEXT has expected value (0000) 
# Test IR Bit 10 
# 2,540,190 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (0000) 
#     SEXT5 has expected value (0000) 
#     SEXT8 has expected value (0000) 
#     SEXT10 has expected value (fc00) 
#     ZEXT has expected value (0000) 
# Test IR Bit 7, ZEXT 
# 2,560,200 ps
# 0       
# /lc3_datapath
# 0
# 0
#     SEXT4 has expected value (ffff) 
#     SEXT5 has expected value (ffff) 
#     SEXT8 has expected value (00ff) 
#     SEXT10 has expected value (00ff) 
#     ZEXT has expected value (00ff) 
# Testing Adder 
#     ADDER has expected value (0000) 
#     ADDER has expected value (0002) 
#     ADDER has expected value (32768) 
# Testing ALU 
# Test PASS A 
#     ALU has expected value (0000) 
#     ALU has expected value (ffff) 
# Testing ADD 
#     ALU has expected value (0002) 
# Testing AND 
#     ALU has expected value (aaaa) 
# Testing NOT 
#     ALU has expected value (5555) 
# Testing BUSS Drivers 
#     BUSS has expected value (zzzz) 
#     BUSS has expected value (ffff) 
#     BUSS has expected value (ffff) 
#     BUSS has expected value (ffff) 
#     BUSS has expected value (ffff) 
set hex FFFF
# FFFF
set hex ffff
# ffff
set dec [ expr 0x$hex ]
# 65535
quit -sim
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
vsim lc3_testbench
# vsim lc3_testbench 
# ** Note: (vsim-3812) Design is being optimized...
# Loading work.lc3_testbench(fast)
add wave * 
# (vish-4014) No objects found matching '*'.
add wave * -r
# (vish-4014) No objects found matching '*'.
# Missing signal name or pattern.
add wave sim:/*
# (vish-4014) No objects found matching '/*'.
vsim -novopt lc3_testbench
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
add wave * -r
# Missing signal name or pattern.
run 1000 ns
# Reset is Complete
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
vcom
vcom lc3.v
# QuestaSim-64 vcom 10.1c Compiler 2012.07 Jul 27 2012
# ** Error: (vcom-7) Failed to open design unit file "lc3.v" in read mode.
# No such file or directory. (errno = ENOENT)
# /net/fpga2/questasim10.1c/questasim/linux_x86_64/vcom failed.
quit -sim
vcom lc3.v
# QuestaSim-64 vcom 10.1c Compiler 2012.07 Jul 27 2012
# ** Error: (vcom-7) Failed to open design unit file "lc3.v" in read mode.
# No such file or directory. (errno = ENOENT)
# /net/fpga2/questasim10.1c/questasim/linux_x86_64/vcom failed.
vcom ../veriloglc3.v
# QuestaSim-64 vcom 10.1c Compiler 2012.07 Jul 27 2012
# ** Error: (vcom-7) Failed to open design unit file "../veriloglc3.v" in read mode.
# No such file or directory. (errno = ENOENT)
# /net/fpga2/questasim10.1c/questasim/linux_x86_64/vcom failed.
vcom ../verilog/lc3.v
# QuestaSim-64 vcom 10.1c Compiler 2012.07 Jul 27 2012
# -- Loading package STANDARD
# ** Error: ../verilog/lc3.v(1): near "default_": 
# ** Error: ../verilog/lc3.v(1): VHDL Compiler exiting
# /net/fpga2/questasim10.1c/questasim/linux_x86_64/vcom failed.
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# ** Error: (vish-4014) No objects found matching '/lc3_testbench/LC3/CONTROL/PC'.
# Error in macro ./testbench.do line 5
# (vish-4014) No objects found matching '/lc3_testbench/LC3/CONTROL/PC'.
#     while executing
# "add wave clk"
add wave -position insertpoint  \
sim:/lc3_testbench/LC3/DATAPATH/PC
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:  was 0 expected x
# Error:   was x expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
# Success:   was updated as expected
quit -sim
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:  was 0 expected x
# Error:   was x expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
# Success:   was updated as expected
quit -sim
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:  was 0 expected x
# Error:   was x expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
# Success:   was updated as expected
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:  was 0 expected x
# Error:   was x expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
# Success:   was updated as expected
quit -sim
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:  was 0 expected x
# Error:   was x expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
# Success:   was updated as expected
# Compile of lc3_datapath.v failed with 1 errors.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v failed with 1 errors.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v failed with 1 errors.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
# Error:   was x expected 0
# Error:  was x expected 1
# Error:   was x expected 0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:   was 0 expected x
# Error:   was 0 expected x
# Error:  was 0 expected x
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# ** Warning: (vsim-PLI-3003) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(11): [TOFD] - System task or function '$sdisplay' is not defined.
#         Region: /lc3_testbench/ValidateRegisterUpdate
# ** Warning: (vsim-PLI-3003) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(14): [TOFD] - System task or function '$sdisplay' is not defined.
#         Region: /lc3_testbench/ValidateRegisterUpdate
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# ** Warning: (vsim-PLI-3003) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(11): [TOFD] - System task or function '$sdisplay' is not defined.
#         Region: /lc3_testbench/ValidateRegisterUpdate
# ** Warning: (vsim-PLI-3003) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(14): [TOFD] - System task or function '$sdisplay' is not defined.
#         Region: /lc3_testbench/ValidateRegisterUpdate
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# ** Warning: (vsim-PLI-3003) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(12): [TOFD] - System task or function '$sdisplay' is not defined.
#         Region: /lc3_testbench/ValidateRegisterUpdate
# ** Warning: (vsim-PLI-3003) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(15): [TOFD] - System task or function '$sdisplay' is not defined.
#         Region: /lc3_testbench/ValidateRegisterUpdate
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# ** Warning: (vsim-PLI-3003) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(12): [TOFD] - System task or function '$sdisplay' is not defined.
#         Region: /lc3_testbench/ValidateRegisterUpdate
# ** Warning: (vsim-PLI-3003) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(15): [TOFD] - System task or function '$sdisplay' is not defined.
#         Region: /lc3_testbench/ValidateRegisterUpdate
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:                               IR was     0 expected     x
# Error:                               IR was     0 expected     x
# Error:                               PC was     0 expected     x
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:       IR was     0 expected     x
# Error:      MAR was     0 expected     x
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Error:       IR was     0 expected     x
# Error:      MAR was     0 expected     x
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Success:       PC was updated as expected
# Error:      MAR was     1 expected     0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:      MAR was     0 expected     x
# Success:       PC was updated as expected
# Success:       IR was updated as expected
# Success:       PC was updated as expected
# Error:      MAR was     1 expected     0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:      MAR was     0 expected     x
# Starting Fetch!
# Success:       PC was updated as expected
# Success:       IR was updated as expected
# Success:       PC was updated as expected
# Error:      MAR was     1 expected     0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:      MAR was     x expected     x
# Error:       IR was     x expected     x
# Error:       PC was     x expected     x
# Error:      MAR was     0 expected     x
# Starting Fetch!
# Success:       PC was updated as expected
# Success:       IR was updated as expected
# Success:       PC was updated as expected
# Error:      MAR was     1 expected     0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Error:      MAR was     0 expected     x
# Starting Fetch!
# Error:      MDR was     0 expected     x
# Success:       PC was updated as expected
# Success:       IR was updated as expected
# Success:       PC was updated as expected
# Error:      MAR was     1 expected     0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Checking Register      MAR @ time:                   90
# Error:      MAR was     0 expected     x
# Starting Fetch!
# Checking Register      MDR @ time:                  110
# Error:      MDR was     0 expected     x
# Checking Register       PC @ time:                  110
# Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
# Success:       IR was updated as expected
# Checking Register       PC @ time:                  170
# Success:       PC was updated as expected
# Checking Register      MAR @ time:                  190
# Error:      MAR was     1 expected     0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Checking Register      MAR @ time:                   90
#    Error:      MAR was     0 expected     x
# Starting Fetch!
# Checking Register      MDR @ time:                  110
#    Error:      MDR was     0 expected     x
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# Checking Register       PC @ time:                  170
#    Success:       PC was updated as expected
# Checking Register      MAR @ time:                  190
#    Error:      MAR was     1 expected     0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch!
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# Checking Register      MDR @ time:                  110
#    Error:      MDR was     0 expected     x
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# Checking Register       PC @ time:                  170
#    Success:       PC was updated as expected
# Checking Register      MAR @ time:                  190
#    Error:      MAR was     1 expected     0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch!
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# Checking Register      MDR @ time:                  110
#    Error:      MDR was     0 expected     x
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# Checking Register       PC @ time:                  170
#    Success:       PC was updated as expected
# Checking Register      MAR @ time:                  190
#    Error:      MAR was     1 expected     0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch!
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# Checking Register       PC @ time:                  170
#    Success:       PC was updated as expected
# Checking Register      MAR @ time:                  190
#    Error:      MAR was     1 expected     0
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(157): [CNNODP] - Component name (REG0) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(157): Unresolved reference to 'REG0' in LC3.DATAPATH.REG0.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(159): [CNNODP] - Component name (REG1) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(159): Unresolved reference to 'REG1' in LC3.DATAPATH.REG1.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(161): [CNNODP] - Component name (REG2) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(161): Unresolved reference to 'REG2' in LC3.DATAPATH.REG2.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(163): [CNNODP] - Component name (REG3) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(163): Unresolved reference to 'REG3' in LC3.DATAPATH.REG3.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(165): [CNNODP] - Component name (REG4) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(165): Unresolved reference to 'REG4' in LC3.DATAPATH.REG4.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(167): [CNNODP] - Component name (REG5) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(167): Unresolved reference to 'REG5' in LC3.DATAPATH.REG5.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(169): [CNNODP] - Component name (REG6) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(169): Unresolved reference to 'REG6' in LC3.DATAPATH.REG6.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(171): [CNNODP] - Component name (REG7) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(171): Unresolved reference to 'REG7' in LC3.DATAPATH.REG7.
#         Region: /lc3_testbench
# Error loading design
# Error: Error loading design 
#        Pausing macro execution 
# MACRO ./testbench.do PAUSED at line 1
quit -sim
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(157): [CNNODP] - Component name (REG0) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(157): Unresolved reference to 'REG0' in LC3.DATAPATH.REG0.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(159): [CNNODP] - Component name (REG1) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(159): Unresolved reference to 'REG1' in LC3.DATAPATH.REG1.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(161): [CNNODP] - Component name (REG2) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(161): Unresolved reference to 'REG2' in LC3.DATAPATH.REG2.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(163): [CNNODP] - Component name (REG3) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(163): Unresolved reference to 'REG3' in LC3.DATAPATH.REG3.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(165): [CNNODP] - Component name (REG4) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(165): Unresolved reference to 'REG4' in LC3.DATAPATH.REG4.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(167): [CNNODP] - Component name (REG5) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(167): Unresolved reference to 'REG5' in LC3.DATAPATH.REG5.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(169): [CNNODP] - Component name (REG6) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(169): Unresolved reference to 'REG6' in LC3.DATAPATH.REG6.
#         Region: /lc3_testbench
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(171): [CNNODP] - Component name (REG7) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(171): Unresolved reference to 'REG7' in LC3.DATAPATH.REG7.
#         Region: /lc3_testbench
# Error loading design
# Error: Error loading design 
#        Pausing macro execution 
# MACRO ./testbench.do PAUSED at line 1
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# ** Warning: (vsim-3008) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(157): [CNNODP] - Component name (REG) is not on a downward path.
#         Region: /lc3_testbench
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(157): Unresolved reference to 'REG' in LC3.DATAPATH.REG.
#         Region: /lc3_testbench
# Error loading design
# Error: Error loading design 
#        Pausing macro execution 
# MACRO ./testbench.do PAUSED at line 1
quit -sim
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch of Instr:     0
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# Fetch of Instr     0 Complete
# Checking Register       PC @ time:                  170
#    Error:       PC is not scheduled for Update!
# Checking Register      MAR @ time:                  190
#    Error:      MAR is not scheduled for Update!
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch of Instr:     0
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# Fetch of Instr     0 Complete
# Checking Register       PC @ time:                  170
#    Error:       PC is not scheduled for Update!
# Checking Register      MAR @ time:                  190
#    Error:      MAR is not scheduled for Update!
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch of Instr:     0
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Error:       IR was     0 expected 13604
# Checking Register       PC @ time:                  170
#    Error:       PC is not scheduled for Update!
# Checking Register      MAR @ time:                  190
#    Error:      MAR is not scheduled for Update!
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch of Instr:     0
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Error:       IR was     0 expected 13604
# Checking Register       PC @ time:                  170
#    Error:       PC is not scheduled for Update!
# Checking Register      MAR @ time:                  190
#    Error:      MAR is not scheduled for Update!
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Loading work.lc3
# Loading work.lc3_datapath
# Loading work.lc3_control
# Starting Fetch of Instr:     0
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Error:       IR was     0 expected 13604
# Checking Register       PC @ time:                  170
#    Error:       PC is not scheduled for Update!
# Checking Register      MAR @ time:                  190
#    Error:      MAR is not scheduled for Update!
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# ** Error: (vsim-3043) /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/verilog/lc3_testbench.v(161): Unresolved reference to 'fetchUpdateState'.
#         Region: /lc3_testbench
# Error loading design
# Error: Error loading design 
#        Pausing macro execution 
# MACRO ./testbench.do PAUSED at line 1
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch of Instr:     0
# FET:NEXT_MEM: 0
# fetchUpdateStatus: f
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# fetchUpdateStatus: 1
# Checking Register       IR @ time:                  130
#    Error:       IR was     0 expected 13604
# Checking Register       PC @ time:                  170
#    Error:       PC is not scheduled for Update!
# fetchUpdateStatus: 3
# Checking Register      MAR @ time:                  190
#    Error:      MAR is not scheduled for Update!
# fetchUpdateStatus: b
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch of Instr:     0
# FET:IR_VALUE: 13604
# FET:NEXT_MEM: 0
# fetchUpdateStatus: f
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# fetchUpdateStatus: 1
# Checking Register       IR @ time:                  130
#    Error:       IR was     0 expected 13604
# Checking Register       PC @ time:                  170
#    Error:       PC is not scheduled for Update!
# fetchUpdateStatus: 3
# Checking Register      MAR @ time:                  190
#    Error:      MAR is not scheduled for Update!
# fetchUpdateStatus: b
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch of Instr:     0
# FET:IR_VALUE: 13604
# FET:NEXT_MEM: 0
# fetchUpdateStatus: f
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# fetchUpdateStatus: 1
# Checking Register       IR @ time:                  130
#    Error:       IR was     0 expected 13604
# Checking Register       PC @ time:                  170
#    Error:       PC is not scheduled for Update!
# fetchUpdateStatus: 3
# Checking Register      MAR @ time:                  190
#    Error:      MAR is not scheduled for Update!
# fetchUpdateStatus: b
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch of Instr:     0
# FET:IR_VALUE: 13604
# FET:NEXT_MEM: 13604
# fetchUpdateStatus: f
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Error:      MDR was     0 expected 13604
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# fetchUpdateStatus: 5
# Checking Register       IR @ time:                  130
#    Error:       IR was     0 expected 13604
# Checking Register       PC @ time:                  170
#    Error:       PC is not scheduled for Update!
# fetchUpdateStatus: 7
# Checking Register      MAR @ time:                  190
#    Error:      MAR is not scheduled for Update!
# fetchUpdateStatus: f
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Starting Fetch of Instr:     0
# FET:IR_VALUE: 13604
# FET:NEXT_MEM: 13604
# fetchUpdateStatus: f
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# fetchUpdateStatus: 1
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# fetchUpdateStatus: 0
# Fetch of Instr     0 Complete
# Starting Execution of Instr:     0
# Checking Register      MDR @ time:                  170
#    Error:      MDR is not scheduled for Update!
# fetchUpdateStatus: 4
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# ****Starting Fetch of Instr:     0****
# fetchUpdateStatus: f
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# fetchUpdateStatus: 1
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# fetchUpdateStatus: 0
# Fetch of Instr     0 Complete
# ****Starting Execution of Instr:     0****
# Checking Register      MDR @ time:                  170
#    Error:      MDR is not scheduled for Update!
# fetchUpdateStatus: 4
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# ****Starting Fetch of Instr:     0****
# executeUpdateStatus: 7xx
# fetchUpdateStatus: f
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# executeUpdateStatus: 3xx
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# executeUpdateStatus: 0xx
# fetchUpdateStatus: 1
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# fetchUpdateStatus: 0
# Fetch of Instr     0 Complete
# ****Starting Execution of Instr:     0****
# Checking Register      MDR @ time:                  170
#    Error:      MDR is not scheduled for Update!
# executeUpdateStatus: 2xx
# fetchUpdateStatus: 4
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# fetchUpdateStatus: 0
# Fetch of Instr     0 Complete
# executeUpdateStatus: 000
# ****Starting Execution of Instr:     0****
# Execution of Instr     0 Complete
# ****Starting Fetch of Instr:     1****
# executeUpdateStatus: 700
# fetchUpdateStatus: f
# ****Starting Fetch of Instr:     1****
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# executeUpdateStatus: 300
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# executeUpdateStatus: 000
# fetchUpdateStatus: 1
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# fetchUpdateStatus: 0
# Fetch of Instr     1 Complete
# ****Starting Execution of Instr:     1****
# Execution of Instr     1 Complete
# ****Starting Fetch of Instr:     2****
# executeUpdateStatus: 700
# fetchUpdateStatus: f
# Checking Register     REG0 @ time:                  170
#    Error:     REG0 is not scheduled for Update!
# executeUpdateStatus: 780
# Checking Register      MAR @ time:                  190
#    Success:      MAR was updated as expected
# executeUpdateStatus: 380
# fetchUpdateStatus: 7
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
do testbench.do
# vsim -novopt lc3_testbench 
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# fetchUpdateStatus: 0
# Fetch of Instr     0 Complete
# executeUpdateStatus: 000
# ****Starting Execution of Instr:     0****
# Execution of Instr     0 Complete
# ****Starting Fetch of Instr:     1****
# executeUpdateStatus: 700
# fetchUpdateStatus: f
# ****Starting Fetch of Instr:     1****
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# executeUpdateStatus: 300
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# executeUpdateStatus: 000
# fetchUpdateStatus: 1
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# fetchUpdateStatus: 0
# Fetch of Instr     1 Complete
# ****Starting Execution of Instr:     1****
# Execution of Instr     1 Complete
# ****Starting Fetch of Instr:     2****
# executeUpdateStatus: 700
# fetchUpdateStatus: f
# Checking Register     REG0 @ time:                  170
#    Error:     REG0 is not scheduled for Update!
# executeUpdateStatus: 780
# Checking Register      MAR @ time:                  190
#    Success:      MAR was updated as expected
# executeUpdateStatus: 380
# fetchUpdateStatus: 7
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# fetchUpdateStatus: 0
# Fetch of Instr     0 Complete
# executeUpdateStatus: 000
# ****Starting Execution of Instr:     0****
# Execution of Instr     0 Complete
# ****Starting Fetch of Instr:     1****
# executeUpdateStatus: 700
# fetchUpdateStatus: f
# ****Starting Fetch of Instr:     1****
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# executeUpdateStatus: 300
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# executeUpdateStatus: 000
# fetchUpdateStatus: 1
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# fetchUpdateStatus: 0
# Fetch of Instr     1 Complete
# ****Starting Execution of Instr:     1****
# Execution of Instr     1 Complete
# ****Starting Fetch of Instr:     2****
# executeUpdateStatus: 700
# fetchUpdateStatus: f
# Checking Register     REG0 @ time:                  170
#    Error:     REG0 is not scheduled for Update!
# executeUpdateStatus: 780
# Checking Register      MAR @ time:                  190
#    Success:      MAR was updated as expected
# executeUpdateStatus: 380
# fetchUpdateStatus: 7
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v failed with 1 errors.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v failed with 1 errors.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# fetchUpdateStatus: 0
# Fetch of Instr     0 Complete
# executeUpdateStatus: 000
# ****Starting Execution of Instr:     0****
# Execution of Instr     0 Complete
# ****Starting Fetch of Instr:     1****
# executeUpdateStatus: e00
# fetchUpdateStatus: f
# ****Starting Fetch of Instr:     1****
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# executeUpdateStatus: 600
# fetchUpdateStatus: 7
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# executeUpdateStatus: 000
# fetchUpdateStatus: 1
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# fetchUpdateStatus: 0
# Fetch of Instr     1 Complete
# ****Starting Execution of Instr:     1****
#  Instr     1: AND
# Execution of Instr     1 Complete
# executeUpdateStatus: 001
# ****Starting Fetch of Instr:     2****
# executeUpdateStatus: e01
# fetchUpdateStatus: f
# Checking Register     REG0 @ time:                  170
#    Error:     REG0 is not scheduled for Update!
# executeUpdateStatus: e81
# Checking Register      MAR @ time:                  190
#    Success:      MAR was updated as expected
# executeUpdateStatus: 681
# fetchUpdateStatus: 7
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Fetch of Instr     0 Complete
# ****Starting Execution of Instr:     0****
# Execution of Instr     0 Complete
# ****Starting Fetch of Instr:     1****
# ****Starting Fetch of Instr:     1****
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# Fetch of Instr     1 Complete
# ****Starting Execution of Instr:     1****
#  Instr     1: AND
# Execution of Instr     1 Complete
# ****Starting Fetch of Instr:     2****
# Checking Register     REG0 @ time:                  170
#    Error:     REG0 is not scheduled for Update!
# Checking Register      MAR @ time:                  190
#    Success:      MAR was updated as expected
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v failed with 1 errors.
# 4 compiles, 1 failed with 1 error. 
# Compile of lc3_datapath.v was successful.
# Compile of lc3.v was successful.
# Compile of lc3_control.v was successful.
# Compile of lc3_testbench.v was successful.
# 4 compiles, 0 failed with no errors. 
do testbench.do
# vsim -novopt lc3_testbench 
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_testbench
# Loading work.lc3_testbench
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3
# Loading work.lc3
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_datapath
# Loading work.lc3_datapath
# Refreshing /net/fpga1/users/joshuas2/ECEn620/Assignments/Assignment0/lc3_verilog/work.lc3_control
# Loading work.lc3_control
# Fetch of Instr     0 Complete
# ****Starting Execution of Instr:     0****
# Execution of Instr     0 Complete
# ****Starting Fetch of Instr:     1****
# ****Starting Fetch of Instr:     1****
# Checking Register      MAR @ time:                   90
#    Success:      MAR was updated as expected
# Checking Register      MDR @ time:                  110
#    Success:      MDR was updated as expected
# Checking Register       PC @ time:                  110
#    Success:       PC was updated as expected
# Checking Register       IR @ time:                  130
#    Success:       IR was updated as expected
# Fetch of Instr     1 Complete
# ****Starting Execution of Instr:     1****
#  Instr     1: AND
# Execution of Instr     1 Complete
# ****Starting Fetch of Instr:     2****
# Checking Register     REG0 @ time:                  170
#    Error:     REG0 is not scheduled for Update!
# Simulation Terminated Due to Error
